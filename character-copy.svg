<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="838" onload="init(evt)" viewBox="0 0 1200 838" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="838" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="821.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="821.00"> </text><svg id="frames" x="10" width="1180" total_samples="638"><g><title>perf-exec (5 samples, 0.78%)</title><rect x="0.0000%" y="773" width="0.7837%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="5"/><text x="0.2500%" y="783.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.78%)</title><rect x="0.0000%" y="757" width="0.7837%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="5"/><text x="0.2500%" y="767.50"></text></g><g><title>do_syscall_64 (5 samples, 0.78%)</title><rect x="0.0000%" y="741" width="0.7837%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="5"/><text x="0.2500%" y="751.50"></text></g><g><title>__x64_sys_execve (5 samples, 0.78%)</title><rect x="0.0000%" y="725" width="0.7837%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="5"/><text x="0.2500%" y="735.50"></text></g><g><title>do_execveat_common.isra.0 (5 samples, 0.78%)</title><rect x="0.0000%" y="709" width="0.7837%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="5"/><text x="0.2500%" y="719.50"></text></g><g><title>bprm_execve (5 samples, 0.78%)</title><rect x="0.0000%" y="693" width="0.7837%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="5"/><text x="0.2500%" y="703.50"></text></g><g><title>exec_binprm (5 samples, 0.78%)</title><rect x="0.0000%" y="677" width="0.7837%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="5"/><text x="0.2500%" y="687.50"></text></g><g><title>load_elf_binary (5 samples, 0.78%)</title><rect x="0.0000%" y="661" width="0.7837%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="5"/><text x="0.2500%" y="671.50"></text></g><g><title>begin_new_exec (5 samples, 0.78%)</title><rect x="0.0000%" y="645" width="0.7837%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="5"/><text x="0.2500%" y="655.50"></text></g><g><title>perf_event_exec (5 samples, 0.78%)</title><rect x="0.0000%" y="629" width="0.7837%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="5"/><text x="0.2500%" y="639.50"></text></g><g><title>ctx_resched (5 samples, 0.78%)</title><rect x="0.0000%" y="613" width="0.7837%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="5"/><text x="0.2500%" y="623.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.78%)</title><rect x="0.0000%" y="597" width="0.7837%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="5"/><text x="0.2500%" y="607.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.78%)</title><rect x="0.0000%" y="581" width="0.7837%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="5"/><text x="0.2500%" y="591.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.78%)</title><rect x="0.0000%" y="565" width="0.7837%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="5"/><text x="0.2500%" y="575.50"></text></g><g><title>native_write_msr (5 samples, 0.78%)</title><rect x="0.0000%" y="549" width="0.7837%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="5"/><text x="0.2500%" y="559.50"></text></g><g><title>&lt;&amp;[u8] as alloc::ffi::c_str::CString::new::SpecNewImpl&gt;::spec_new_impl (1 samples, 0.16%)</title><rect x="0.7837%" y="741" width="0.1567%" height="15" fill="rgb(231,73,38)" fg:x="5" fg:w="1"/><text x="1.0337%" y="751.50"></text></g><g><title>alloc::ffi::c_str::CString::new::spec_new_impl_bytes (1 samples, 0.16%)</title><rect x="0.7837%" y="725" width="0.1567%" height="15" fill="rgb(225,20,46)" fg:x="5" fg:w="1"/><text x="1.0337%" y="735.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.16%)</title><rect x="0.7837%" y="709" width="0.1567%" height="15" fill="rgb(210,31,41)" fg:x="5" fg:w="1"/><text x="1.0337%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.16%)</title><rect x="0.7837%" y="693" width="0.1567%" height="15" fill="rgb(221,200,47)" fg:x="5" fg:w="1"/><text x="1.0337%" y="703.50"></text></g><g><title>[[heap]] (2 samples, 0.31%)</title><rect x="0.7837%" y="757" width="0.3135%" height="15" fill="rgb(226,26,5)" fg:x="5" fg:w="2"/><text x="1.0337%" y="767.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.16%)</title><rect x="0.9404%" y="741" width="0.1567%" height="15" fill="rgb(249,33,26)" fg:x="6" fg:w="1"/><text x="1.1904%" y="751.50"></text></g><g><title>[[stack]] (2 samples, 0.31%)</title><rect x="1.0972%" y="757" width="0.3135%" height="15" fill="rgb(235,183,28)" fg:x="7" fg:w="2"/><text x="1.3472%" y="767.50"></text></g><g><title>_int_realloc (2 samples, 0.31%)</title><rect x="1.0972%" y="741" width="0.3135%" height="15" fill="rgb(221,5,38)" fg:x="7" fg:w="2"/><text x="1.3472%" y="751.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="1.2539%" y="725" width="0.1567%" height="15" fill="rgb(247,18,42)" fg:x="8" fg:w="1"/><text x="1.5039%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (5 samples, 0.78%)</title><rect x="1.4107%" y="741" width="0.7837%" height="15" fill="rgb(241,131,45)" fg:x="9" fg:w="5"/><text x="1.6607%" y="751.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.16%)</title><rect x="2.1944%" y="741" width="0.1567%" height="15" fill="rgb(249,31,29)" fg:x="14" fg:w="1"/><text x="2.4444%" y="751.50"></text></g><g><title>__close (2 samples, 0.31%)</title><rect x="2.3511%" y="741" width="0.3135%" height="15" fill="rgb(225,111,53)" fg:x="15" fg:w="2"/><text x="2.6011%" y="751.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="2.5078%" y="725" width="0.1567%" height="15" fill="rgb(238,160,17)" fg:x="16" fg:w="1"/><text x="2.7578%" y="735.50"></text></g><g><title>__libc_read (1 samples, 0.16%)</title><rect x="2.6646%" y="741" width="0.1567%" height="15" fill="rgb(214,148,48)" fg:x="17" fg:w="1"/><text x="2.9146%" y="751.50"></text></g><g><title>__libc_start_main (1 samples, 0.16%)</title><rect x="2.8213%" y="741" width="0.1567%" height="15" fill="rgb(232,36,49)" fg:x="18" fg:w="1"/><text x="3.0713%" y="751.50"></text></g><g><title>main (1 samples, 0.16%)</title><rect x="2.8213%" y="725" width="0.1567%" height="15" fill="rgb(209,103,24)" fg:x="18" fg:w="1"/><text x="3.0713%" y="735.50"></text></g><g><title>std::rt::lang_start_internal (1 samples, 0.16%)</title><rect x="2.8213%" y="709" width="0.1567%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="1"/><text x="3.0713%" y="719.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.16%)</title><rect x="2.8213%" y="693" width="0.1567%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="1"/><text x="3.0713%" y="703.50"></text></g><g><title>std::panicking::try (1 samples, 0.16%)</title><rect x="2.8213%" y="677" width="0.1567%" height="15" fill="rgb(254,191,54)" fg:x="18" fg:w="1"/><text x="3.0713%" y="687.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.16%)</title><rect x="2.8213%" y="661" width="0.1567%" height="15" fill="rgb(241,83,37)" fg:x="18" fg:w="1"/><text x="3.0713%" y="671.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (1 samples, 0.16%)</title><rect x="2.8213%" y="645" width="0.1567%" height="15" fill="rgb(233,36,39)" fg:x="18" fg:w="1"/><text x="3.0713%" y="655.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.16%)</title><rect x="2.8213%" y="629" width="0.1567%" height="15" fill="rgb(226,3,54)" fg:x="18" fg:w="1"/><text x="3.0713%" y="639.50"></text></g><g><title>std::panicking::try (1 samples, 0.16%)</title><rect x="2.8213%" y="613" width="0.1567%" height="15" fill="rgb(245,192,40)" fg:x="18" fg:w="1"/><text x="3.0713%" y="623.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.16%)</title><rect x="2.8213%" y="597" width="0.1567%" height="15" fill="rgb(238,167,29)" fg:x="18" fg:w="1"/><text x="3.0713%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.16%)</title><rect x="2.8213%" y="581" width="0.1567%" height="15" fill="rgb(232,182,51)" fg:x="18" fg:w="1"/><text x="3.0713%" y="591.50"></text></g><g><title>std::rt::lang_start::_{{closure}} (1 samples, 0.16%)</title><rect x="2.8213%" y="565" width="0.1567%" height="15" fill="rgb(231,60,39)" fg:x="18" fg:w="1"/><text x="3.0713%" y="575.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.16%)</title><rect x="2.8213%" y="549" width="0.1567%" height="15" fill="rgb(208,69,12)" fg:x="18" fg:w="1"/><text x="3.0713%" y="559.50"></text></g><g><title>tf_df::main (1 samples, 0.16%)</title><rect x="2.8213%" y="533" width="0.1567%" height="15" fill="rgb(235,93,37)" fg:x="18" fg:w="1"/><text x="3.0713%" y="543.50"></text></g><g><title>regex::re_unicode::Regex::new (1 samples, 0.16%)</title><rect x="2.8213%" y="517" width="0.1567%" height="15" fill="rgb(213,116,39)" fg:x="18" fg:w="1"/><text x="3.0713%" y="527.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.16%)</title><rect x="2.8213%" y="501" width="0.1567%" height="15" fill="rgb(222,207,29)" fg:x="18" fg:w="1"/><text x="3.0713%" y="511.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="2.8213%" y="485" width="0.1567%" height="15" fill="rgb(206,96,30)" fg:x="18" fg:w="1"/><text x="3.0713%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="2.8213%" y="469" width="0.1567%" height="15" fill="rgb(218,138,4)" fg:x="18" fg:w="1"/><text x="3.0713%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="2.8213%" y="453" width="0.1567%" height="15" fill="rgb(250,191,14)" fg:x="18" fg:w="1"/><text x="3.0713%" y="463.50"></text></g><g><title>__lseek64 (1 samples, 0.16%)</title><rect x="2.9781%" y="741" width="0.1567%" height="15" fill="rgb(239,60,40)" fg:x="19" fg:w="1"/><text x="3.2281%" y="751.50"></text></g><g><title>__rdl_realloc (1 samples, 0.16%)</title><rect x="3.1348%" y="741" width="0.1567%" height="15" fill="rgb(206,27,48)" fg:x="20" fg:w="1"/><text x="3.3848%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.16%)</title><rect x="3.2915%" y="741" width="0.1567%" height="15" fill="rgb(225,35,8)" fg:x="21" fg:w="1"/><text x="3.5415%" y="751.50"></text></g><g><title>[unknown] (14 samples, 2.19%)</title><rect x="1.4107%" y="757" width="2.1944%" height="15" fill="rgb(250,213,24)" fg:x="9" fg:w="14"/><text x="1.6607%" y="767.50">[..</text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.16%)</title><rect x="3.4483%" y="741" width="0.1567%" height="15" fill="rgb(247,123,22)" fg:x="22" fg:w="1"/><text x="3.6983%" y="751.50"></text></g><g><title>call_filldir (1 samples, 0.16%)</title><rect x="3.7618%" y="325" width="0.1567%" height="15" fill="rgb(231,138,38)" fg:x="24" fg:w="1"/><text x="4.0118%" y="335.50"></text></g><g><title>ext4_htree_store_dirent (2 samples, 0.31%)</title><rect x="3.9185%" y="293" width="0.3135%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="2"/><text x="4.1685%" y="303.50"></text></g><g><title>memset_erms (1 samples, 0.16%)</title><rect x="4.0752%" y="277" width="0.1567%" height="15" fill="rgb(251,118,11)" fg:x="26" fg:w="1"/><text x="4.3252%" y="287.50"></text></g><g><title>ext4_dx_readdir (4 samples, 0.63%)</title><rect x="3.7618%" y="341" width="0.6270%" height="15" fill="rgb(217,147,25)" fg:x="24" fg:w="4"/><text x="4.0118%" y="351.50"></text></g><g><title>ext4_htree_fill_tree (3 samples, 0.47%)</title><rect x="3.9185%" y="325" width="0.4702%" height="15" fill="rgb(247,81,37)" fg:x="25" fg:w="3"/><text x="4.1685%" y="335.50"></text></g><g><title>htree_dirblock_to_tree (3 samples, 0.47%)</title><rect x="3.9185%" y="309" width="0.4702%" height="15" fill="rgb(209,12,38)" fg:x="25" fg:w="3"/><text x="4.1685%" y="319.50"></text></g><g><title>ext4fs_dirhash (1 samples, 0.16%)</title><rect x="4.2320%" y="293" width="0.1567%" height="15" fill="rgb(227,1,9)" fg:x="27" fg:w="1"/><text x="4.4820%" y="303.50"></text></g><g><title>__ext4fs_dirhash (1 samples, 0.16%)</title><rect x="4.2320%" y="277" width="0.1567%" height="15" fill="rgb(248,47,43)" fg:x="27" fg:w="1"/><text x="4.4820%" y="287.50"></text></g><g><title>&lt;std::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.94%)</title><rect x="3.6050%" y="485" width="0.9404%" height="15" fill="rgb(221,10,30)" fg:x="23" fg:w="6"/><text x="3.8550%" y="495.50"></text></g><g><title>&lt;std::sys::unix::fs::ReadDir as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.94%)</title><rect x="3.6050%" y="469" width="0.9404%" height="15" fill="rgb(210,229,1)" fg:x="23" fg:w="6"/><text x="3.8550%" y="479.50"></text></g><g><title>__readdir64 (6 samples, 0.94%)</title><rect x="3.6050%" y="453" width="0.9404%" height="15" fill="rgb(222,148,37)" fg:x="23" fg:w="6"/><text x="3.8550%" y="463.50"></text></g><g><title>__GI___getdents64 (5 samples, 0.78%)</title><rect x="3.7618%" y="437" width="0.7837%" height="15" fill="rgb(234,67,33)" fg:x="24" fg:w="5"/><text x="4.0118%" y="447.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (5 samples, 0.78%)</title><rect x="3.7618%" y="421" width="0.7837%" height="15" fill="rgb(247,98,35)" fg:x="24" fg:w="5"/><text x="4.0118%" y="431.50"></text></g><g><title>do_syscall_64 (5 samples, 0.78%)</title><rect x="3.7618%" y="405" width="0.7837%" height="15" fill="rgb(247,138,52)" fg:x="24" fg:w="5"/><text x="4.0118%" y="415.50"></text></g><g><title>__x64_sys_getdents64 (5 samples, 0.78%)</title><rect x="3.7618%" y="389" width="0.7837%" height="15" fill="rgb(213,79,30)" fg:x="24" fg:w="5"/><text x="4.0118%" y="399.50"></text></g><g><title>iterate_dir (5 samples, 0.78%)</title><rect x="3.7618%" y="373" width="0.7837%" height="15" fill="rgb(246,177,23)" fg:x="24" fg:w="5"/><text x="4.0118%" y="383.50"></text></g><g><title>ext4_readdir (5 samples, 0.78%)</title><rect x="3.7618%" y="357" width="0.7837%" height="15" fill="rgb(230,62,27)" fg:x="24" fg:w="5"/><text x="4.0118%" y="367.50"></text></g><g><title>rb_next (1 samples, 0.16%)</title><rect x="4.3887%" y="341" width="0.1567%" height="15" fill="rgb(216,154,8)" fg:x="28" fg:w="1"/><text x="4.6387%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (7 samples, 1.10%)</title><rect x="3.6050%" y="517" width="1.0972%" height="15" fill="rgb(244,35,45)" fg:x="23" fg:w="7"/><text x="3.8550%" y="527.50"></text></g><g><title>&lt;walkdir::IntoIter as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 1.10%)</title><rect x="3.6050%" y="501" width="1.0972%" height="15" fill="rgb(251,115,12)" fg:x="23" fg:w="7"/><text x="3.8550%" y="511.50"></text></g><g><title>walkdir::dent::DirEntry::from_entry (1 samples, 0.16%)</title><rect x="4.5455%" y="485" width="0.1567%" height="15" fill="rgb(240,54,50)" fg:x="29" fg:w="1"/><text x="4.7955%" y="495.50"></text></g><g><title>std::fs::DirEntry::path (1 samples, 0.16%)</title><rect x="4.5455%" y="469" width="0.1567%" height="15" fill="rgb(233,84,52)" fg:x="29" fg:w="1"/><text x="4.7955%" y="479.50"></text></g><g><title>std::sys::unix::fs::DirEntry::path (1 samples, 0.16%)</title><rect x="4.5455%" y="453" width="0.1567%" height="15" fill="rgb(207,117,47)" fg:x="29" fg:w="1"/><text x="4.7955%" y="463.50"></text></g><g><title>std::path::Path::join (1 samples, 0.16%)</title><rect x="4.5455%" y="437" width="0.1567%" height="15" fill="rgb(249,43,39)" fg:x="29" fg:w="1"/><text x="4.7955%" y="447.50"></text></g><g><title>std::path::Path::_join (1 samples, 0.16%)</title><rect x="4.5455%" y="421" width="0.1567%" height="15" fill="rgb(209,38,44)" fg:x="29" fg:w="1"/><text x="4.7955%" y="431.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="38.0878%" y="485" width="0.1567%" height="15" fill="rgb(236,212,23)" fg:x="243" fg:w="1"/><text x="38.3378%" y="495.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="38.0878%" y="469" width="0.1567%" height="15" fill="rgb(242,79,21)" fg:x="243" fg:w="1"/><text x="38.3378%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="38.0878%" y="453" width="0.1567%" height="15" fill="rgb(211,96,35)" fg:x="243" fg:w="1"/><text x="38.3378%" y="463.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="38.0878%" y="437" width="0.1567%" height="15" fill="rgb(253,215,40)" fg:x="243" fg:w="1"/><text x="38.3378%" y="447.50"></text></g><g><title>__count_memcg_events (1 samples, 0.16%)</title><rect x="38.0878%" y="421" width="0.1567%" height="15" fill="rgb(211,81,21)" fg:x="243" fg:w="1"/><text x="38.3378%" y="431.50"></text></g><g><title>[libc-2.31.so] (104 samples, 16.30%)</title><rect x="22.1003%" y="501" width="16.3009%" height="15" fill="rgb(208,190,38)" fg:x="141" fg:w="104"/><text x="22.3503%" y="511.50">[libc-2.31.so]</text></g><g><title>asm_sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="38.2445%" y="485" width="0.1567%" height="15" fill="rgb(235,213,38)" fg:x="244" fg:w="1"/><text x="38.4945%" y="495.50"></text></g><g><title>sysvec_apic_timer_interrupt (1 samples, 0.16%)</title><rect x="38.2445%" y="469" width="0.1567%" height="15" fill="rgb(237,122,38)" fg:x="244" fg:w="1"/><text x="38.4945%" y="479.50"></text></g><g><title>irq_exit_rcu (1 samples, 0.16%)</title><rect x="38.2445%" y="453" width="0.1567%" height="15" fill="rgb(244,218,35)" fg:x="244" fg:w="1"/><text x="38.4945%" y="463.50"></text></g><g><title>__softirqentry_text_start (1 samples, 0.16%)</title><rect x="38.2445%" y="437" width="0.1567%" height="15" fill="rgb(240,68,47)" fg:x="244" fg:w="1"/><text x="38.4945%" y="447.50"></text></g><g><title>rcu_core_si (1 samples, 0.16%)</title><rect x="38.2445%" y="421" width="0.1567%" height="15" fill="rgb(210,16,53)" fg:x="244" fg:w="1"/><text x="38.4945%" y="431.50"></text></g><g><title>rcu_core (1 samples, 0.16%)</title><rect x="38.2445%" y="405" width="0.1567%" height="15" fill="rgb(235,124,12)" fg:x="244" fg:w="1"/><text x="38.4945%" y="415.50"></text></g><g><title>rcu_do_batch (1 samples, 0.16%)</title><rect x="38.2445%" y="389" width="0.1567%" height="15" fill="rgb(224,169,11)" fg:x="244" fg:w="1"/><text x="38.4945%" y="399.50"></text></g><g><title>file_free_rcu (1 samples, 0.16%)</title><rect x="38.2445%" y="373" width="0.1567%" height="15" fill="rgb(250,166,2)" fg:x="244" fg:w="1"/><text x="38.4945%" y="383.50"></text></g><g><title>kmem_cache_free (1 samples, 0.16%)</title><rect x="38.2445%" y="357" width="0.1567%" height="15" fill="rgb(242,216,29)" fg:x="244" fg:w="1"/><text x="38.4945%" y="367.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.16%)</title><rect x="38.4013%" y="501" width="0.1567%" height="15" fill="rgb(230,116,27)" fg:x="245" fg:w="1"/><text x="38.6513%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.16%)</title><rect x="38.4013%" y="485" width="0.1567%" height="15" fill="rgb(228,99,48)" fg:x="245" fg:w="1"/><text x="38.6513%" y="495.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="38.8715%" y="421" width="0.1567%" height="15" fill="rgb(253,11,6)" fg:x="248" fg:w="1"/><text x="39.1215%" y="431.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="38.8715%" y="405" width="0.1567%" height="15" fill="rgb(247,143,39)" fg:x="248" fg:w="1"/><text x="39.1215%" y="415.50"></text></g><g><title>irqentry_exit (1 samples, 0.16%)</title><rect x="38.8715%" y="389" width="0.1567%" height="15" fill="rgb(236,97,10)" fg:x="248" fg:w="1"/><text x="39.1215%" y="399.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.16%)</title><rect x="38.8715%" y="373" width="0.1567%" height="15" fill="rgb(233,208,19)" fg:x="248" fg:w="1"/><text x="39.1215%" y="383.50"></text></g><g><title>error_entry (1 samples, 0.16%)</title><rect x="39.0282%" y="421" width="0.1567%" height="15" fill="rgb(216,164,2)" fg:x="249" fg:w="1"/><text x="39.2782%" y="431.50"></text></g><g><title>[libc-2.31.so] (4 samples, 0.63%)</title><rect x="38.7147%" y="437" width="0.6270%" height="15" fill="rgb(220,129,5)" fg:x="247" fg:w="4"/><text x="38.9647%" y="447.50"></text></g><g><title>sync_regs (1 samples, 0.16%)</title><rect x="39.1850%" y="421" width="0.1567%" height="15" fill="rgb(242,17,10)" fg:x="250" fg:w="1"/><text x="39.4350%" y="431.50"></text></g><g><title>__irqentry_text_end (1 samples, 0.16%)</title><rect x="39.3417%" y="437" width="0.1567%" height="15" fill="rgb(242,107,0)" fg:x="251" fg:w="1"/><text x="39.5917%" y="447.50"></text></g><g><title>_int_free (1 samples, 0.16%)</title><rect x="39.4984%" y="437" width="0.1567%" height="15" fill="rgb(251,28,31)" fg:x="252" fg:w="1"/><text x="39.7484%" y="447.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.16%)</title><rect x="40.4389%" y="293" width="0.1567%" height="15" fill="rgb(233,223,10)" fg:x="258" fg:w="1"/><text x="40.6889%" y="303.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.16%)</title><rect x="40.4389%" y="277" width="0.1567%" height="15" fill="rgb(215,21,27)" fg:x="258" fg:w="1"/><text x="40.6889%" y="287.50"></text></g><g><title>__mem_cgroup_charge (2 samples, 0.31%)</title><rect x="40.4389%" y="325" width="0.3135%" height="15" fill="rgb(232,23,21)" fg:x="258" fg:w="2"/><text x="40.6889%" y="335.50"></text></g><g><title>charge_memcg (2 samples, 0.31%)</title><rect x="40.4389%" y="309" width="0.3135%" height="15" fill="rgb(244,5,23)" fg:x="258" fg:w="2"/><text x="40.6889%" y="319.50"></text></g><g><title>try_charge_memcg (1 samples, 0.16%)</title><rect x="40.5956%" y="293" width="0.1567%" height="15" fill="rgb(226,81,46)" fg:x="259" fg:w="1"/><text x="40.8456%" y="303.50"></text></g><g><title>page_counter_try_charge (1 samples, 0.16%)</title><rect x="40.5956%" y="277" width="0.1567%" height="15" fill="rgb(247,70,30)" fg:x="259" fg:w="1"/><text x="40.8456%" y="287.50"></text></g><g><title>__alloc_pages (3 samples, 0.47%)</title><rect x="40.7524%" y="309" width="0.4702%" height="15" fill="rgb(212,68,19)" fg:x="260" fg:w="3"/><text x="41.0024%" y="319.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="41.0658%" y="293" width="0.1567%" height="15" fill="rgb(240,187,13)" fg:x="262" fg:w="1"/><text x="41.3158%" y="303.50"></text></g><g><title>rmqueue (1 samples, 0.16%)</title><rect x="41.0658%" y="277" width="0.1567%" height="15" fill="rgb(223,113,26)" fg:x="262" fg:w="1"/><text x="41.3158%" y="287.50"></text></g><g><title>rmqueue_bulk (1 samples, 0.16%)</title><rect x="41.0658%" y="261" width="0.1567%" height="15" fill="rgb(206,192,2)" fg:x="262" fg:w="1"/><text x="41.3158%" y="271.50"></text></g><g><title>policy_node (1 samples, 0.16%)</title><rect x="41.2226%" y="309" width="0.1567%" height="15" fill="rgb(241,108,4)" fg:x="263" fg:w="1"/><text x="41.4726%" y="319.50"></text></g><g><title>__handle_mm_fault (7 samples, 1.10%)</title><rect x="40.4389%" y="357" width="1.0972%" height="15" fill="rgb(247,173,49)" fg:x="258" fg:w="7"/><text x="40.6889%" y="367.50"></text></g><g><title>do_anonymous_page (7 samples, 1.10%)</title><rect x="40.4389%" y="341" width="1.0972%" height="15" fill="rgb(224,114,35)" fg:x="258" fg:w="7"/><text x="40.6889%" y="351.50"></text></g><g><title>alloc_pages_vma (5 samples, 0.78%)</title><rect x="40.7524%" y="325" width="0.7837%" height="15" fill="rgb(245,159,27)" fg:x="260" fg:w="5"/><text x="41.0024%" y="335.50"></text></g><g><title>policy_nodemask (1 samples, 0.16%)</title><rect x="41.3793%" y="309" width="0.1567%" height="15" fill="rgb(245,172,44)" fg:x="264" fg:w="1"/><text x="41.6293%" y="319.50"></text></g><g><title>do_user_addr_fault (9 samples, 1.41%)</title><rect x="40.2821%" y="389" width="1.4107%" height="15" fill="rgb(236,23,11)" fg:x="257" fg:w="9"/><text x="40.5321%" y="399.50"></text></g><g><title>handle_mm_fault (9 samples, 1.41%)</title><rect x="40.2821%" y="373" width="1.4107%" height="15" fill="rgb(205,117,38)" fg:x="257" fg:w="9"/><text x="40.5321%" y="383.50"></text></g><g><title>pmd_val (1 samples, 0.16%)</title><rect x="41.5361%" y="357" width="0.1567%" height="15" fill="rgb(237,72,25)" fg:x="265" fg:w="1"/><text x="41.7861%" y="367.50"></text></g><g><title>asm_exc_page_fault (10 samples, 1.57%)</title><rect x="40.2821%" y="421" width="1.5674%" height="15" fill="rgb(244,70,9)" fg:x="257" fg:w="10"/><text x="40.5321%" y="431.50"></text></g><g><title>exc_page_fault (10 samples, 1.57%)</title><rect x="40.2821%" y="405" width="1.5674%" height="15" fill="rgb(217,125,39)" fg:x="257" fg:w="10"/><text x="40.5321%" y="415.50"></text></g><g><title>irqentry_exit (1 samples, 0.16%)</title><rect x="41.6928%" y="389" width="0.1567%" height="15" fill="rgb(235,36,10)" fg:x="266" fg:w="1"/><text x="41.9428%" y="399.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.16%)</title><rect x="41.6928%" y="373" width="0.1567%" height="15" fill="rgb(251,123,47)" fg:x="266" fg:w="1"/><text x="41.9428%" y="383.50"></text></g><g><title>malloc_consolidate (1 samples, 0.16%)</title><rect x="41.8495%" y="421" width="0.1567%" height="15" fill="rgb(221,13,13)" fg:x="267" fg:w="1"/><text x="42.0995%" y="431.50"></text></g><g><title>sync_regs (1 samples, 0.16%)</title><rect x="42.0063%" y="421" width="0.1567%" height="15" fill="rgb(238,131,9)" fg:x="268" fg:w="1"/><text x="42.2563%" y="431.50"></text></g><g><title>arch_get_unmapped_area_topdown (1 samples, 0.16%)</title><rect x="42.4765%" y="293" width="0.1567%" height="15" fill="rgb(211,50,8)" fg:x="271" fg:w="1"/><text x="42.7265%" y="303.50"></text></g><g><title>__x64_sys_brk (2 samples, 0.31%)</title><rect x="42.4765%" y="325" width="0.3135%" height="15" fill="rgb(245,182,24)" fg:x="271" fg:w="2"/><text x="42.7265%" y="335.50"></text></g><g><title>do_brk_flags (2 samples, 0.31%)</title><rect x="42.4765%" y="309" width="0.3135%" height="15" fill="rgb(242,14,37)" fg:x="271" fg:w="2"/><text x="42.7265%" y="319.50"></text></g><g><title>vma_merge (1 samples, 0.16%)</title><rect x="42.6332%" y="293" width="0.1567%" height="15" fill="rgb(246,228,12)" fg:x="272" fg:w="1"/><text x="42.8832%" y="303.50"></text></g><g><title>__vma_adjust (1 samples, 0.16%)</title><rect x="42.6332%" y="277" width="0.1567%" height="15" fill="rgb(213,55,15)" fg:x="272" fg:w="1"/><text x="42.8832%" y="287.50"></text></g><g><title>_int_malloc (21 samples, 3.29%)</title><rect x="39.6552%" y="437" width="3.2915%" height="15" fill="rgb(209,9,3)" fg:x="253" fg:w="21"/><text x="39.9052%" y="447.50">_in..</text></g><g><title>sysmalloc (5 samples, 0.78%)</title><rect x="42.1630%" y="421" width="0.7837%" height="15" fill="rgb(230,59,30)" fg:x="269" fg:w="5"/><text x="42.4130%" y="431.50"></text></g><g><title>__GI___default_morecore (5 samples, 0.78%)</title><rect x="42.1630%" y="405" width="0.7837%" height="15" fill="rgb(209,121,21)" fg:x="269" fg:w="5"/><text x="42.4130%" y="415.50"></text></g><g><title>__GI___sbrk (4 samples, 0.63%)</title><rect x="42.3197%" y="389" width="0.6270%" height="15" fill="rgb(220,109,13)" fg:x="270" fg:w="4"/><text x="42.5697%" y="399.50"></text></g><g><title>__brk (3 samples, 0.47%)</title><rect x="42.4765%" y="373" width="0.4702%" height="15" fill="rgb(232,18,1)" fg:x="271" fg:w="3"/><text x="42.7265%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="42.4765%" y="357" width="0.4702%" height="15" fill="rgb(215,41,42)" fg:x="271" fg:w="3"/><text x="42.7265%" y="367.50"></text></g><g><title>do_syscall_64 (3 samples, 0.47%)</title><rect x="42.4765%" y="341" width="0.4702%" height="15" fill="rgb(224,123,36)" fg:x="271" fg:w="3"/><text x="42.7265%" y="351.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.16%)</title><rect x="42.7900%" y="325" width="0.1567%" height="15" fill="rgb(240,125,3)" fg:x="273" fg:w="1"/><text x="43.0400%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 4.70%)</title><rect x="38.5580%" y="501" width="4.7022%" height="15" fill="rgb(205,98,50)" fg:x="246" fg:w="30"/><text x="38.8080%" y="511.50">alloc..</text></g><g><title>alloc::raw_vec::finish_grow (29 samples, 4.55%)</title><rect x="38.7147%" y="485" width="4.5455%" height="15" fill="rgb(205,185,37)" fg:x="247" fg:w="29"/><text x="38.9647%" y="495.50">alloc..</text></g><g><title>__GI___libc_realloc (29 samples, 4.55%)</title><rect x="38.7147%" y="469" width="4.5455%" height="15" fill="rgb(238,207,15)" fg:x="247" fg:w="29"/><text x="38.9647%" y="479.50">__GI_..</text></g><g><title>_int_realloc (29 samples, 4.55%)</title><rect x="38.7147%" y="453" width="4.5455%" height="15" fill="rgb(213,199,42)" fg:x="247" fg:w="29"/><text x="38.9647%" y="463.50">_int_..</text></g><g><title>asm_exc_page_fault (2 samples, 0.31%)</title><rect x="42.9467%" y="437" width="0.3135%" height="15" fill="rgb(235,201,11)" fg:x="274" fg:w="2"/><text x="43.1967%" y="447.50"></text></g><g><title>exc_page_fault (2 samples, 0.31%)</title><rect x="42.9467%" y="421" width="0.3135%" height="15" fill="rgb(207,46,11)" fg:x="274" fg:w="2"/><text x="43.1967%" y="431.50"></text></g><g><title>do_user_addr_fault (2 samples, 0.31%)</title><rect x="42.9467%" y="405" width="0.3135%" height="15" fill="rgb(241,35,35)" fg:x="274" fg:w="2"/><text x="43.1967%" y="415.50"></text></g><g><title>handle_mm_fault (2 samples, 0.31%)</title><rect x="42.9467%" y="389" width="0.3135%" height="15" fill="rgb(243,32,47)" fg:x="274" fg:w="2"/><text x="43.1967%" y="399.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.31%)</title><rect x="42.9467%" y="373" width="0.3135%" height="15" fill="rgb(247,202,23)" fg:x="274" fg:w="2"/><text x="43.1967%" y="383.50"></text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="43.2602%" y="437" width="0.1567%" height="15" fill="rgb(219,102,11)" fg:x="276" fg:w="1"/><text x="43.5102%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.31%)</title><rect x="43.2602%" y="501" width="0.3135%" height="15" fill="rgb(243,110,44)" fg:x="276" fg:w="2"/><text x="43.5102%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.31%)</title><rect x="43.2602%" y="485" width="0.3135%" height="15" fill="rgb(222,74,54)" fg:x="276" fg:w="2"/><text x="43.5102%" y="495.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.31%)</title><rect x="43.2602%" y="469" width="0.3135%" height="15" fill="rgb(216,99,12)" fg:x="276" fg:w="2"/><text x="43.5102%" y="479.50"></text></g><g><title>_int_realloc (2 samples, 0.31%)</title><rect x="43.2602%" y="453" width="0.3135%" height="15" fill="rgb(226,22,26)" fg:x="276" fg:w="2"/><text x="43.5102%" y="463.50"></text></g><g><title>asm_exc_page_fault (1 samples, 0.16%)</title><rect x="43.4169%" y="437" width="0.1567%" height="15" fill="rgb(217,163,10)" fg:x="277" fg:w="1"/><text x="43.6669%" y="447.50"></text></g><g><title>exc_page_fault (1 samples, 0.16%)</title><rect x="43.4169%" y="421" width="0.1567%" height="15" fill="rgb(213,25,53)" fg:x="277" fg:w="1"/><text x="43.6669%" y="431.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="43.4169%" y="405" width="0.1567%" height="15" fill="rgb(252,105,26)" fg:x="277" fg:w="1"/><text x="43.6669%" y="415.50"></text></g><g><title>down_read_trylock (1 samples, 0.16%)</title><rect x="43.4169%" y="389" width="0.1567%" height="15" fill="rgb(220,39,43)" fg:x="277" fg:w="1"/><text x="43.6669%" y="399.50"></text></g><g><title>core::hash::BuildHasher::hash_one (11 samples, 1.72%)</title><rect x="43.5737%" y="501" width="1.7241%" height="15" fill="rgb(229,68,48)" fg:x="278" fg:w="11"/><text x="43.8237%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 2.66%)</title><rect x="45.2978%" y="501" width="2.6646%" height="15" fill="rgb(252,8,32)" fg:x="289" fg:w="17"/><text x="45.5478%" y="511.50">ha..</text></g><g><title>core::hash::BuildHasher::hash_one (17 samples, 2.66%)</title><rect x="45.2978%" y="485" width="2.6646%" height="15" fill="rgb(223,20,43)" fg:x="289" fg:w="17"/><text x="45.5478%" y="495.50">co..</text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (17 samples, 2.66%)</title><rect x="47.9624%" y="501" width="2.6646%" height="15" fill="rgb(229,81,49)" fg:x="306" fg:w="17"/><text x="48.2124%" y="511.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.31%)</title><rect x="50.3135%" y="485" width="0.3135%" height="15" fill="rgb(236,28,36)" fg:x="321" fg:w="2"/><text x="50.5635%" y="495.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.31%)</title><rect x="50.3135%" y="469" width="0.3135%" height="15" fill="rgb(249,185,26)" fg:x="321" fg:w="2"/><text x="50.5635%" y="479.50"></text></g><g><title>do_user_addr_fault (1 samples, 0.16%)</title><rect x="50.9404%" y="309" width="0.1567%" height="15" fill="rgb(249,174,33)" fg:x="325" fg:w="1"/><text x="51.1904%" y="319.50"></text></g><g><title>handle_mm_fault (1 samples, 0.16%)</title><rect x="50.9404%" y="293" width="0.1567%" height="15" fill="rgb(233,201,37)" fg:x="325" fg:w="1"/><text x="51.1904%" y="303.50"></text></g><g><title>__handle_mm_fault (1 samples, 0.16%)</title><rect x="50.9404%" y="277" width="0.1567%" height="15" fill="rgb(221,78,26)" fg:x="325" fg:w="1"/><text x="51.1904%" y="287.50"></text></g><g><title>do_anonymous_page (1 samples, 0.16%)</title><rect x="50.9404%" y="261" width="0.1567%" height="15" fill="rgb(250,127,30)" fg:x="325" fg:w="1"/><text x="51.1904%" y="271.50"></text></g><g><title>alloc::string::String::reserve (5 samples, 0.78%)</title><rect x="50.6270%" y="469" width="0.7837%" height="15" fill="rgb(230,49,44)" fg:x="323" fg:w="5"/><text x="50.8770%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (5 samples, 0.78%)</title><rect x="50.6270%" y="453" width="0.7837%" height="15" fill="rgb(229,67,23)" fg:x="323" fg:w="5"/><text x="50.8770%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (5 samples, 0.78%)</title><rect x="50.6270%" y="437" width="0.7837%" height="15" fill="rgb(249,83,47)" fg:x="323" fg:w="5"/><text x="50.8770%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (5 samples, 0.78%)</title><rect x="50.6270%" y="421" width="0.7837%" height="15" fill="rgb(215,43,3)" fg:x="323" fg:w="5"/><text x="50.8770%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (5 samples, 0.78%)</title><rect x="50.6270%" y="405" width="0.7837%" height="15" fill="rgb(238,154,13)" fg:x="323" fg:w="5"/><text x="50.8770%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.78%)</title><rect x="50.6270%" y="389" width="0.7837%" height="15" fill="rgb(219,56,2)" fg:x="323" fg:w="5"/><text x="50.8770%" y="399.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.78%)</title><rect x="50.6270%" y="373" width="0.7837%" height="15" fill="rgb(233,0,4)" fg:x="323" fg:w="5"/><text x="50.8770%" y="383.50"></text></g><g><title>_int_malloc (5 samples, 0.78%)</title><rect x="50.6270%" y="357" width="0.7837%" height="15" fill="rgb(235,30,7)" fg:x="323" fg:w="5"/><text x="50.8770%" y="367.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.47%)</title><rect x="50.9404%" y="341" width="0.4702%" height="15" fill="rgb(250,79,13)" fg:x="325" fg:w="3"/><text x="51.1904%" y="351.50"></text></g><g><title>exc_page_fault (3 samples, 0.47%)</title><rect x="50.9404%" y="325" width="0.4702%" height="15" fill="rgb(211,146,34)" fg:x="325" fg:w="3"/><text x="51.1904%" y="335.50"></text></g><g><title>irqentry_exit (2 samples, 0.31%)</title><rect x="51.0972%" y="309" width="0.3135%" height="15" fill="rgb(228,22,38)" fg:x="326" fg:w="2"/><text x="51.3472%" y="319.50"></text></g><g><title>irqentry_exit_to_user_mode (2 samples, 0.31%)</title><rect x="51.0972%" y="293" width="0.3135%" height="15" fill="rgb(235,168,5)" fg:x="326" fg:w="2"/><text x="51.3472%" y="303.50"></text></g><g><title>__audit_inode (1 samples, 0.16%)</title><rect x="51.8809%" y="261" width="0.1567%" height="15" fill="rgb(221,155,16)" fg:x="331" fg:w="1"/><text x="52.1309%" y="271.50"></text></g><g><title>audit_copy_inode (1 samples, 0.16%)</title><rect x="51.8809%" y="245" width="0.1567%" height="15" fill="rgb(215,215,53)" fg:x="331" fg:w="1"/><text x="52.1309%" y="255.50"></text></g><g><title>get_vfs_caps_from_disk (1 samples, 0.16%)</title><rect x="51.8809%" y="229" width="0.1567%" height="15" fill="rgb(223,4,10)" fg:x="331" fg:w="1"/><text x="52.1309%" y="239.50"></text></g><g><title>__vfs_getxattr (1 samples, 0.16%)</title><rect x="51.8809%" y="213" width="0.1567%" height="15" fill="rgb(234,103,6)" fg:x="331" fg:w="1"/><text x="52.1309%" y="223.50"></text></g><g><title>ext4_xattr_security_get (1 samples, 0.16%)</title><rect x="51.8809%" y="197" width="0.1567%" height="15" fill="rgb(227,97,0)" fg:x="331" fg:w="1"/><text x="52.1309%" y="207.50"></text></g><g><title>ext4_xattr_get (1 samples, 0.16%)</title><rect x="51.8809%" y="181" width="0.1567%" height="15" fill="rgb(234,150,53)" fg:x="331" fg:w="1"/><text x="52.1309%" y="191.50"></text></g><g><title>down_read (1 samples, 0.16%)</title><rect x="51.8809%" y="165" width="0.1567%" height="15" fill="rgb(228,201,54)" fg:x="331" fg:w="1"/><text x="52.1309%" y="175.50"></text></g><g><title>__fdget_raw (2 samples, 0.31%)</title><rect x="52.0376%" y="229" width="0.3135%" height="15" fill="rgb(222,22,37)" fg:x="332" fg:w="2"/><text x="52.2876%" y="239.50"></text></g><g><title>__fget_light (2 samples, 0.31%)</title><rect x="52.0376%" y="213" width="0.3135%" height="15" fill="rgb(237,53,32)" fg:x="332" fg:w="2"/><text x="52.2876%" y="223.50"></text></g><g><title>path_init (3 samples, 0.47%)</title><rect x="52.0376%" y="245" width="0.4702%" height="15" fill="rgb(233,25,53)" fg:x="332" fg:w="3"/><text x="52.2876%" y="255.50"></text></g><g><title>path_get (1 samples, 0.16%)</title><rect x="52.3511%" y="229" width="0.1567%" height="15" fill="rgb(210,40,34)" fg:x="334" fg:w="1"/><text x="52.6011%" y="239.50"></text></g><g><title>mntget (1 samples, 0.16%)</title><rect x="52.3511%" y="213" width="0.1567%" height="15" fill="rgb(241,220,44)" fg:x="334" fg:w="1"/><text x="52.6011%" y="223.50"></text></g><g><title>filename_lookup (5 samples, 0.78%)</title><rect x="51.8809%" y="277" width="0.7837%" height="15" fill="rgb(235,28,35)" fg:x="331" fg:w="5"/><text x="52.1309%" y="287.50"></text></g><g><title>path_lookupat.isra.0 (4 samples, 0.63%)</title><rect x="52.0376%" y="261" width="0.6270%" height="15" fill="rgb(210,56,17)" fg:x="332" fg:w="4"/><text x="52.2876%" y="271.50"></text></g><g><title>walk_component (1 samples, 0.16%)</title><rect x="52.5078%" y="245" width="0.1567%" height="15" fill="rgb(224,130,29)" fg:x="335" fg:w="1"/><text x="52.7578%" y="255.50"></text></g><g><title>__x64_sys_statx (8 samples, 1.25%)</title><rect x="51.7241%" y="341" width="1.2539%" height="15" fill="rgb(235,212,8)" fg:x="330" fg:w="8"/><text x="51.9741%" y="351.50"></text></g><g><title>do_statx (8 samples, 1.25%)</title><rect x="51.7241%" y="325" width="1.2539%" height="15" fill="rgb(223,33,50)" fg:x="330" fg:w="8"/><text x="51.9741%" y="335.50"></text></g><g><title>vfs_statx (8 samples, 1.25%)</title><rect x="51.7241%" y="309" width="1.2539%" height="15" fill="rgb(219,149,13)" fg:x="330" fg:w="8"/><text x="51.9741%" y="319.50"></text></g><g><title>user_path_at_empty (7 samples, 1.10%)</title><rect x="51.8809%" y="293" width="1.0972%" height="15" fill="rgb(250,156,29)" fg:x="331" fg:w="7"/><text x="52.1309%" y="303.50"></text></g><g><title>getname_flags (2 samples, 0.31%)</title><rect x="52.6646%" y="277" width="0.3135%" height="15" fill="rgb(216,193,19)" fg:x="336" fg:w="2"/><text x="52.9146%" y="287.50"></text></g><g><title>memset_erms (2 samples, 0.31%)</title><rect x="52.6646%" y="261" width="0.3135%" height="15" fill="rgb(216,135,14)" fg:x="336" fg:w="2"/><text x="52.9146%" y="271.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.16%)</title><rect x="53.2915%" y="325" width="0.1567%" height="15" fill="rgb(241,47,5)" fg:x="340" fg:w="1"/><text x="53.5415%" y="335.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (14 samples, 2.19%)</title><rect x="51.4107%" y="373" width="2.1944%" height="15" fill="rgb(233,42,35)" fg:x="328" fg:w="14"/><text x="51.6607%" y="383.50">e..</text></g><g><title>do_syscall_64 (12 samples, 1.88%)</title><rect x="51.7241%" y="357" width="1.8809%" height="15" fill="rgb(231,13,6)" fg:x="330" fg:w="12"/><text x="51.9741%" y="367.50">d..</text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.63%)</title><rect x="52.9781%" y="341" width="0.6270%" height="15" fill="rgb(207,181,40)" fg:x="338" fg:w="4"/><text x="53.2281%" y="351.50"></text></g><g><title>syscall_exit_work (1 samples, 0.16%)</title><rect x="53.4483%" y="325" width="0.1567%" height="15" fill="rgb(254,173,49)" fg:x="341" fg:w="1"/><text x="53.6983%" y="335.50"></text></g><g><title>__audit_syscall_exit (1 samples, 0.16%)</title><rect x="53.4483%" y="309" width="0.1567%" height="15" fill="rgb(221,1,38)" fg:x="341" fg:w="1"/><text x="53.6983%" y="319.50"></text></g><g><title>std::fs::File::metadata (16 samples, 2.51%)</title><rect x="51.4107%" y="453" width="2.5078%" height="15" fill="rgb(206,124,46)" fg:x="328" fg:w="16"/><text x="51.6607%" y="463.50">st..</text></g><g><title>std::sys::unix::fs::File::file_attr (16 samples, 2.51%)</title><rect x="51.4107%" y="437" width="2.5078%" height="15" fill="rgb(249,21,11)" fg:x="328" fg:w="16"/><text x="51.6607%" y="447.50">st..</text></g><g><title>std::sys::unix::fs::try_statx (16 samples, 2.51%)</title><rect x="51.4107%" y="421" width="2.5078%" height="15" fill="rgb(222,201,40)" fg:x="328" fg:w="16"/><text x="51.6607%" y="431.50">st..</text></g><g><title>std::sys::unix::fs::try_statx::statx (16 samples, 2.51%)</title><rect x="51.4107%" y="405" width="2.5078%" height="15" fill="rgb(235,61,29)" fg:x="328" fg:w="16"/><text x="51.6607%" y="415.50">st..</text></g><g><title>statx (16 samples, 2.51%)</title><rect x="51.4107%" y="389" width="2.5078%" height="15" fill="rgb(219,207,3)" fg:x="328" fg:w="16"/><text x="51.6607%" y="399.50">st..</text></g><g><title>syscall_return_via_sysret (2 samples, 0.31%)</title><rect x="53.6050%" y="373" width="0.3135%" height="15" fill="rgb(222,56,46)" fg:x="342" fg:w="2"/><text x="53.8550%" y="383.50"></text></g><g><title>__entry_text_start (2 samples, 0.31%)</title><rect x="53.9185%" y="389" width="0.3135%" height="15" fill="rgb(239,76,54)" fg:x="344" fg:w="2"/><text x="54.1685%" y="399.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (2 samples, 0.31%)</title><rect x="54.2320%" y="389" width="0.3135%" height="15" fill="rgb(231,124,27)" fg:x="346" fg:w="2"/><text x="54.4820%" y="399.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="54.3887%" y="373" width="0.1567%" height="15" fill="rgb(249,195,6)" fg:x="347" fg:w="1"/><text x="54.6387%" y="383.50"></text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.16%)</title><rect x="54.3887%" y="357" width="0.1567%" height="15" fill="rgb(237,174,47)" fg:x="347" fg:w="1"/><text x="54.6387%" y="367.50"></text></g><g><title>__lseek64 (5 samples, 0.78%)</title><rect x="53.9185%" y="405" width="0.7837%" height="15" fill="rgb(206,201,31)" fg:x="344" fg:w="5"/><text x="54.1685%" y="415.50"></text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="54.5455%" y="389" width="0.1567%" height="15" fill="rgb(231,57,52)" fg:x="348" fg:w="1"/><text x="54.7955%" y="399.50"></text></g><g><title>std::fs::buffer_capacity_required (22 samples, 3.45%)</title><rect x="51.4107%" y="469" width="3.4483%" height="15" fill="rgb(248,177,22)" fg:x="328" fg:w="22"/><text x="51.6607%" y="479.50">std..</text></g><g><title>std::io::Seek::stream_position (6 samples, 0.94%)</title><rect x="53.9185%" y="453" width="0.9404%" height="15" fill="rgb(215,211,37)" fg:x="344" fg:w="6"/><text x="54.1685%" y="463.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (6 samples, 0.94%)</title><rect x="53.9185%" y="437" width="0.9404%" height="15" fill="rgb(241,128,51)" fg:x="344" fg:w="6"/><text x="54.1685%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::seek (6 samples, 0.94%)</title><rect x="53.9185%" y="421" width="0.9404%" height="15" fill="rgb(227,165,31)" fg:x="344" fg:w="6"/><text x="54.1685%" y="431.50"></text></g><g><title>std::sys::unix::fs::try_statx (1 samples, 0.16%)</title><rect x="54.7022%" y="405" width="0.1567%" height="15" fill="rgb(228,167,24)" fg:x="349" fg:w="1"/><text x="54.9522%" y="415.50"></text></g><g><title>std::sys::unix::fs::try_statx::statx (1 samples, 0.16%)</title><rect x="54.7022%" y="389" width="0.1567%" height="15" fill="rgb(228,143,12)" fg:x="349" fg:w="1"/><text x="54.9522%" y="399.50"></text></g><g><title>statx (1 samples, 0.16%)</title><rect x="54.7022%" y="373" width="0.1567%" height="15" fill="rgb(249,149,8)" fg:x="349" fg:w="1"/><text x="54.9522%" y="383.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="54.7022%" y="357" width="0.1567%" height="15" fill="rgb(243,35,44)" fg:x="349" fg:w="1"/><text x="54.9522%" y="367.50"></text></g><g><title>asm_sysvec_apic_timer_interrupt (5 samples, 0.78%)</title><rect x="65.9875%" y="405" width="0.7837%" height="15" fill="rgb(246,89,9)" fg:x="421" fg:w="5"/><text x="66.2375%" y="415.50"></text></g><g><title>sysvec_apic_timer_interrupt (5 samples, 0.78%)</title><rect x="65.9875%" y="389" width="0.7837%" height="15" fill="rgb(233,213,13)" fg:x="421" fg:w="5"/><text x="66.2375%" y="399.50"></text></g><g><title>irqentry_exit (5 samples, 0.78%)</title><rect x="65.9875%" y="373" width="0.7837%" height="15" fill="rgb(233,141,41)" fg:x="421" fg:w="5"/><text x="66.2375%" y="383.50"></text></g><g><title>irqentry_exit_to_user_mode (5 samples, 0.78%)</title><rect x="65.9875%" y="357" width="0.7837%" height="15" fill="rgb(239,167,4)" fg:x="421" fg:w="5"/><text x="66.2375%" y="367.50"></text></g><g><title>exit_to_user_mode_prepare (5 samples, 0.78%)</title><rect x="65.9875%" y="341" width="0.7837%" height="15" fill="rgb(209,217,16)" fg:x="421" fg:w="5"/><text x="66.2375%" y="351.50"></text></g><g><title>schedule (5 samples, 0.78%)</title><rect x="65.9875%" y="325" width="0.7837%" height="15" fill="rgb(219,88,35)" fg:x="421" fg:w="5"/><text x="66.2375%" y="335.50"></text></g><g><title>__schedule (5 samples, 0.78%)</title><rect x="65.9875%" y="309" width="0.7837%" height="15" fill="rgb(220,193,23)" fg:x="421" fg:w="5"/><text x="66.2375%" y="319.50"></text></g><g><title>finish_task_switch (5 samples, 0.78%)</title><rect x="65.9875%" y="293" width="0.7837%" height="15" fill="rgb(230,90,52)" fg:x="421" fg:w="5"/><text x="66.2375%" y="303.50"></text></g><g><title>__perf_event_task_sched_in (5 samples, 0.78%)</title><rect x="65.9875%" y="277" width="0.7837%" height="15" fill="rgb(252,106,19)" fg:x="421" fg:w="5"/><text x="66.2375%" y="287.50"></text></g><g><title>perf_pmu_enable.part.0 (5 samples, 0.78%)</title><rect x="65.9875%" y="261" width="0.7837%" height="15" fill="rgb(206,74,20)" fg:x="421" fg:w="5"/><text x="66.2375%" y="271.50"></text></g><g><title>x86_pmu_enable (5 samples, 0.78%)</title><rect x="65.9875%" y="245" width="0.7837%" height="15" fill="rgb(230,138,44)" fg:x="421" fg:w="5"/><text x="66.2375%" y="255.50"></text></g><g><title>intel_pmu_enable_all (5 samples, 0.78%)</title><rect x="65.9875%" y="229" width="0.7837%" height="15" fill="rgb(235,182,43)" fg:x="421" fg:w="5"/><text x="66.2375%" y="239.50"></text></g><g><title>native_write_msr (5 samples, 0.78%)</title><rect x="65.9875%" y="213" width="0.7837%" height="15" fill="rgb(242,16,51)" fg:x="421" fg:w="5"/><text x="66.2375%" y="223.50"></text></g><g><title>core::str::converts::from_utf8 (91 samples, 14.26%)</title><rect x="54.8589%" y="437" width="14.2633%" height="15" fill="rgb(248,9,4)" fg:x="350" fg:w="91"/><text x="55.1089%" y="447.50">core::str::converts::f..</text></g><g><title>core::str::validations::run_utf8_validation (91 samples, 14.26%)</title><rect x="54.8589%" y="421" width="14.2633%" height="15" fill="rgb(210,31,22)" fg:x="350" fg:w="91"/><text x="55.1089%" y="431.50">core::str::validations..</text></g><g><title>core::str::validations::utf8_char_width (15 samples, 2.35%)</title><rect x="66.7712%" y="405" width="2.3511%" height="15" fill="rgb(239,54,39)" fg:x="426" fg:w="15"/><text x="67.0212%" y="415.50">c..</text></g><g><title>std::fs::buffer_capacity_required (1 samples, 0.16%)</title><rect x="69.1223%" y="421" width="0.1567%" height="15" fill="rgb(230,99,41)" fg:x="441" fg:w="1"/><text x="69.3723%" y="431.50"></text></g><g><title>std::io::Seek::stream_position (1 samples, 0.16%)</title><rect x="69.1223%" y="405" width="0.1567%" height="15" fill="rgb(253,106,12)" fg:x="441" fg:w="1"/><text x="69.3723%" y="415.50"></text></g><g><title>&lt;&amp;std::fs::File as std::io::Seek&gt;::seek (1 samples, 0.16%)</title><rect x="69.1223%" y="389" width="0.1567%" height="15" fill="rgb(213,46,41)" fg:x="441" fg:w="1"/><text x="69.3723%" y="399.50"></text></g><g><title>std::sys::unix::fs::File::seek (1 samples, 0.16%)</title><rect x="69.1223%" y="373" width="0.1567%" height="15" fill="rgb(215,133,35)" fg:x="441" fg:w="1"/><text x="69.3723%" y="383.50"></text></g><g><title>__lseek64 (1 samples, 0.16%)</title><rect x="69.1223%" y="357" width="0.1567%" height="15" fill="rgb(213,28,5)" fg:x="441" fg:w="1"/><text x="69.3723%" y="367.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="69.1223%" y="341" width="0.1567%" height="15" fill="rgb(215,77,49)" fg:x="441" fg:w="1"/><text x="69.3723%" y="351.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="69.2790%" y="341" width="0.1567%" height="15" fill="rgb(248,100,22)" fg:x="442" fg:w="1"/><text x="69.5290%" y="351.50"></text></g><g><title>filemap_get_pages (1 samples, 0.16%)</title><rect x="69.5925%" y="197" width="0.1567%" height="15" fill="rgb(208,67,9)" fg:x="444" fg:w="1"/><text x="69.8425%" y="207.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.16%)</title><rect x="69.5925%" y="181" width="0.1567%" height="15" fill="rgb(219,133,21)" fg:x="444" fg:w="1"/><text x="69.8425%" y="191.50"></text></g><g><title>new_sync_read (2 samples, 0.31%)</title><rect x="69.5925%" y="261" width="0.3135%" height="15" fill="rgb(246,46,29)" fg:x="444" fg:w="2"/><text x="69.8425%" y="271.50"></text></g><g><title>ext4_file_read_iter (2 samples, 0.31%)</title><rect x="69.5925%" y="245" width="0.3135%" height="15" fill="rgb(246,185,52)" fg:x="444" fg:w="2"/><text x="69.8425%" y="255.50"></text></g><g><title>generic_file_read_iter (2 samples, 0.31%)</title><rect x="69.5925%" y="229" width="0.3135%" height="15" fill="rgb(252,136,11)" fg:x="444" fg:w="2"/><text x="69.8425%" y="239.50"></text></g><g><title>filemap_read (2 samples, 0.31%)</title><rect x="69.5925%" y="213" width="0.3135%" height="15" fill="rgb(219,138,53)" fg:x="444" fg:w="2"/><text x="69.8425%" y="223.50"></text></g><g><title>touch_atime (1 samples, 0.16%)</title><rect x="69.7492%" y="197" width="0.1567%" height="15" fill="rgb(211,51,23)" fg:x="445" fg:w="1"/><text x="69.9992%" y="207.50"></text></g><g><title>atime_needs_update (1 samples, 0.16%)</title><rect x="69.7492%" y="181" width="0.1567%" height="15" fill="rgb(247,221,28)" fg:x="445" fg:w="1"/><text x="69.9992%" y="191.50"></text></g><g><title>__x64_sys_read (4 samples, 0.63%)</title><rect x="69.5925%" y="309" width="0.6270%" height="15" fill="rgb(251,222,45)" fg:x="444" fg:w="4"/><text x="69.8425%" y="319.50"></text></g><g><title>ksys_read (4 samples, 0.63%)</title><rect x="69.5925%" y="293" width="0.6270%" height="15" fill="rgb(217,162,53)" fg:x="444" fg:w="4"/><text x="69.8425%" y="303.50"></text></g><g><title>vfs_read (4 samples, 0.63%)</title><rect x="69.5925%" y="277" width="0.6270%" height="15" fill="rgb(229,93,14)" fg:x="444" fg:w="4"/><text x="69.8425%" y="287.50"></text></g><g><title>rw_verify_area (2 samples, 0.31%)</title><rect x="69.9060%" y="261" width="0.3135%" height="15" fill="rgb(209,67,49)" fg:x="446" fg:w="2"/><text x="70.1560%" y="271.50"></text></g><g><title>security_file_permission (2 samples, 0.31%)</title><rect x="69.9060%" y="245" width="0.3135%" height="15" fill="rgb(213,87,29)" fg:x="446" fg:w="2"/><text x="70.1560%" y="255.50"></text></g><g><title>apparmor_file_permission (2 samples, 0.31%)</title><rect x="69.9060%" y="229" width="0.3135%" height="15" fill="rgb(205,151,52)" fg:x="446" fg:w="2"/><text x="70.1560%" y="239.50"></text></g><g><title>common_file_perm (2 samples, 0.31%)</title><rect x="69.9060%" y="213" width="0.3135%" height="15" fill="rgb(253,215,39)" fg:x="446" fg:w="2"/><text x="70.1560%" y="223.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read (8 samples, 1.25%)</title><rect x="69.2790%" y="405" width="1.2539%" height="15" fill="rgb(221,220,41)" fg:x="442" fg:w="8"/><text x="69.5290%" y="415.50"></text></g><g><title>std::sys::unix::fs::File::read (8 samples, 1.25%)</title><rect x="69.2790%" y="389" width="1.2539%" height="15" fill="rgb(218,133,21)" fg:x="442" fg:w="8"/><text x="69.5290%" y="399.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read (8 samples, 1.25%)</title><rect x="69.2790%" y="373" width="1.2539%" height="15" fill="rgb(221,193,43)" fg:x="442" fg:w="8"/><text x="69.5290%" y="383.50"></text></g><g><title>__libc_read (8 samples, 1.25%)</title><rect x="69.2790%" y="357" width="1.2539%" height="15" fill="rgb(240,128,52)" fg:x="442" fg:w="8"/><text x="69.5290%" y="367.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (7 samples, 1.10%)</title><rect x="69.4357%" y="341" width="1.0972%" height="15" fill="rgb(253,114,12)" fg:x="443" fg:w="7"/><text x="69.6857%" y="351.50"></text></g><g><title>do_syscall_64 (6 samples, 0.94%)</title><rect x="69.5925%" y="325" width="0.9404%" height="15" fill="rgb(215,223,47)" fg:x="444" fg:w="6"/><text x="69.8425%" y="335.50"></text></g><g><title>syscall_exit_to_user_mode (2 samples, 0.31%)</title><rect x="70.2194%" y="309" width="0.3135%" height="15" fill="rgb(248,225,23)" fg:x="448" fg:w="2"/><text x="70.4694%" y="319.50"></text></g><g><title>__entry_text_start (2 samples, 0.31%)</title><rect x="70.5329%" y="341" width="0.3135%" height="15" fill="rgb(250,108,0)" fg:x="450" fg:w="2"/><text x="70.7829%" y="351.50"></text></g><g><title>__fdget_pos (1 samples, 0.16%)</title><rect x="71.6301%" y="277" width="0.1567%" height="15" fill="rgb(228,208,7)" fg:x="457" fg:w="1"/><text x="71.8801%" y="287.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.47%)</title><rect x="71.7868%" y="181" width="0.4702%" height="15" fill="rgb(244,45,10)" fg:x="458" fg:w="3"/><text x="72.0368%" y="191.50"></text></g><g><title>__handle_mm_fault (2 samples, 0.31%)</title><rect x="72.7273%" y="101" width="0.3135%" height="15" fill="rgb(207,125,25)" fg:x="464" fg:w="2"/><text x="72.9773%" y="111.50"></text></g><g><title>do_anonymous_page (2 samples, 0.31%)</title><rect x="72.7273%" y="85" width="0.3135%" height="15" fill="rgb(210,195,18)" fg:x="464" fg:w="2"/><text x="72.9773%" y="95.50"></text></g><g><title>lru_cache_add_inactive_or_unevictable (1 samples, 0.16%)</title><rect x="72.8840%" y="69" width="0.1567%" height="15" fill="rgb(249,80,12)" fg:x="465" fg:w="1"/><text x="73.1340%" y="79.50"></text></g><g><title>lru_cache_add (1 samples, 0.16%)</title><rect x="72.8840%" y="53" width="0.1567%" height="15" fill="rgb(221,65,9)" fg:x="465" fg:w="1"/><text x="73.1340%" y="63.50"></text></g><g><title>__pagevec_lru_add (1 samples, 0.16%)</title><rect x="72.8840%" y="37" width="0.1567%" height="15" fill="rgb(235,49,36)" fg:x="465" fg:w="1"/><text x="73.1340%" y="47.50"></text></g><g><title>copy_page_to_iter (9 samples, 1.41%)</title><rect x="71.7868%" y="197" width="1.4107%" height="15" fill="rgb(225,32,20)" fg:x="458" fg:w="9"/><text x="72.0368%" y="207.50"></text></g><g><title>copy_user_enhanced_fast_string (6 samples, 0.94%)</title><rect x="72.2571%" y="181" width="0.9404%" height="15" fill="rgb(215,141,46)" fg:x="461" fg:w="6"/><text x="72.5071%" y="191.50"></text></g><g><title>asm_exc_page_fault (3 samples, 0.47%)</title><rect x="72.7273%" y="165" width="0.4702%" height="15" fill="rgb(250,160,47)" fg:x="464" fg:w="3"/><text x="72.9773%" y="175.50"></text></g><g><title>exc_page_fault (3 samples, 0.47%)</title><rect x="72.7273%" y="149" width="0.4702%" height="15" fill="rgb(216,222,40)" fg:x="464" fg:w="3"/><text x="72.9773%" y="159.50"></text></g><g><title>do_user_addr_fault (3 samples, 0.47%)</title><rect x="72.7273%" y="133" width="0.4702%" height="15" fill="rgb(234,217,39)" fg:x="464" fg:w="3"/><text x="72.9773%" y="143.50"></text></g><g><title>handle_mm_fault (3 samples, 0.47%)</title><rect x="72.7273%" y="117" width="0.4702%" height="15" fill="rgb(207,178,40)" fg:x="464" fg:w="3"/><text x="72.9773%" y="127.50"></text></g><g><title>pud_offset.isra.0 (1 samples, 0.16%)</title><rect x="73.0408%" y="101" width="0.1567%" height="15" fill="rgb(221,136,13)" fg:x="466" fg:w="1"/><text x="73.2908%" y="111.50"></text></g><g><title>new_sync_read (10 samples, 1.57%)</title><rect x="71.7868%" y="261" width="1.5674%" height="15" fill="rgb(249,199,10)" fg:x="458" fg:w="10"/><text x="72.0368%" y="271.50"></text></g><g><title>ext4_file_read_iter (10 samples, 1.57%)</title><rect x="71.7868%" y="245" width="1.5674%" height="15" fill="rgb(249,222,13)" fg:x="458" fg:w="10"/><text x="72.0368%" y="255.50"></text></g><g><title>generic_file_read_iter (10 samples, 1.57%)</title><rect x="71.7868%" y="229" width="1.5674%" height="15" fill="rgb(244,185,38)" fg:x="458" fg:w="10"/><text x="72.0368%" y="239.50"></text></g><g><title>filemap_read (10 samples, 1.57%)</title><rect x="71.7868%" y="213" width="1.5674%" height="15" fill="rgb(236,202,9)" fg:x="458" fg:w="10"/><text x="72.0368%" y="223.50"></text></g><g><title>filemap_get_pages (1 samples, 0.16%)</title><rect x="73.1975%" y="197" width="0.1567%" height="15" fill="rgb(250,229,37)" fg:x="467" fg:w="1"/><text x="73.4475%" y="207.50"></text></g><g><title>filemap_get_read_batch (1 samples, 0.16%)</title><rect x="73.1975%" y="181" width="0.1567%" height="15" fill="rgb(206,174,23)" fg:x="467" fg:w="1"/><text x="73.4475%" y="191.50"></text></g><g><title>xas_load (1 samples, 0.16%)</title><rect x="73.1975%" y="165" width="0.1567%" height="15" fill="rgb(211,33,43)" fg:x="467" fg:w="1"/><text x="73.4475%" y="175.50"></text></g><g><title>xas_start (1 samples, 0.16%)</title><rect x="73.1975%" y="149" width="0.1567%" height="15" fill="rgb(245,58,50)" fg:x="467" fg:w="1"/><text x="73.4475%" y="159.50"></text></g><g><title>__x64_sys_read (12 samples, 1.88%)</title><rect x="71.6301%" y="309" width="1.8809%" height="15" fill="rgb(244,68,36)" fg:x="457" fg:w="12"/><text x="71.8801%" y="319.50">_..</text></g><g><title>ksys_read (12 samples, 1.88%)</title><rect x="71.6301%" y="293" width="1.8809%" height="15" fill="rgb(232,229,15)" fg:x="457" fg:w="12"/><text x="71.8801%" y="303.50">k..</text></g><g><title>vfs_read (11 samples, 1.72%)</title><rect x="71.7868%" y="277" width="1.7241%" height="15" fill="rgb(254,30,23)" fg:x="458" fg:w="11"/><text x="72.0368%" y="287.50"></text></g><g><title>rw_verify_area (1 samples, 0.16%)</title><rect x="73.3542%" y="261" width="0.1567%" height="15" fill="rgb(235,160,14)" fg:x="468" fg:w="1"/><text x="73.6042%" y="271.50"></text></g><g><title>security_file_permission (1 samples, 0.16%)</title><rect x="73.3542%" y="245" width="0.1567%" height="15" fill="rgb(212,155,44)" fg:x="468" fg:w="1"/><text x="73.6042%" y="255.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.16%)</title><rect x="73.5110%" y="309" width="0.1567%" height="15" fill="rgb(226,2,50)" fg:x="469" fg:w="1"/><text x="73.7610%" y="319.50"></text></g><g><title>syscall_trace_enter.isra.0 (1 samples, 0.16%)</title><rect x="73.5110%" y="293" width="0.1567%" height="15" fill="rgb(234,177,6)" fg:x="469" fg:w="1"/><text x="73.7610%" y="303.50"></text></g><g><title>__audit_syscall_entry (1 samples, 0.16%)</title><rect x="73.5110%" y="277" width="0.1567%" height="15" fill="rgb(217,24,9)" fg:x="469" fg:w="1"/><text x="73.7610%" y="287.50"></text></g><g><title>auditd_test_task (1 samples, 0.16%)</title><rect x="73.5110%" y="261" width="0.1567%" height="15" fill="rgb(220,13,46)" fg:x="469" fg:w="1"/><text x="73.7610%" y="271.50"></text></g><g><title>do_syscall_64 (18 samples, 2.82%)</title><rect x="71.4734%" y="325" width="2.8213%" height="15" fill="rgb(239,221,27)" fg:x="456" fg:w="18"/><text x="71.7234%" y="335.50">do..</text></g><g><title>syscall_exit_to_user_mode (4 samples, 0.63%)</title><rect x="73.6677%" y="309" width="0.6270%" height="15" fill="rgb(222,198,25)" fg:x="470" fg:w="4"/><text x="73.9177%" y="319.50"></text></g><g><title>syscall_exit_work (2 samples, 0.31%)</title><rect x="73.9812%" y="293" width="0.3135%" height="15" fill="rgb(211,99,13)" fg:x="472" fg:w="2"/><text x="74.2312%" y="303.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.31%)</title><rect x="73.9812%" y="277" width="0.3135%" height="15" fill="rgb(232,111,31)" fg:x="472" fg:w="2"/><text x="74.2312%" y="287.50"></text></g><g><title>__libc_read (25 samples, 3.92%)</title><rect x="70.5329%" y="357" width="3.9185%" height="15" fill="rgb(245,82,37)" fg:x="450" fg:w="25"/><text x="70.7829%" y="367.50">__li..</text></g><g><title>entry_SYSCALL_64_after_hwframe (23 samples, 3.61%)</title><rect x="70.8464%" y="341" width="3.6050%" height="15" fill="rgb(227,149,46)" fg:x="452" fg:w="23"/><text x="71.0964%" y="351.50">entr..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.16%)</title><rect x="74.2947%" y="325" width="0.1567%" height="15" fill="rgb(218,36,50)" fg:x="474" fg:w="1"/><text x="74.5447%" y="335.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_to_string (153 samples, 23.98%)</title><rect x="50.6270%" y="485" width="23.9812%" height="15" fill="rgb(226,80,48)" fg:x="323" fg:w="153"/><text x="50.8770%" y="495.50">&lt;std::fs::File as std::io::Read&gt;::read..</text></g><g><title>std::io::default_read_to_string (126 samples, 19.75%)</title><rect x="54.8589%" y="469" width="19.7492%" height="15" fill="rgb(238,224,15)" fg:x="350" fg:w="126"/><text x="55.1089%" y="479.50">std::io::default_read_to_string</text></g><g><title>std::io::append_to_string (126 samples, 19.75%)</title><rect x="54.8589%" y="453" width="19.7492%" height="15" fill="rgb(241,136,10)" fg:x="350" fg:w="126"/><text x="55.1089%" y="463.50">std::io::append_to_string</text></g><g><title>std::io::default_read_to_string::{{closure}} (35 samples, 5.49%)</title><rect x="69.1223%" y="437" width="5.4859%" height="15" fill="rgb(208,32,45)" fg:x="441" fg:w="35"/><text x="69.3723%" y="447.50">std::io..</text></g><g><title>std::io::default_read_to_end (34 samples, 5.33%)</title><rect x="69.2790%" y="421" width="5.3292%" height="15" fill="rgb(207,135,9)" fg:x="442" fg:w="34"/><text x="69.5290%" y="431.50">std::io..</text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (26 samples, 4.08%)</title><rect x="70.5329%" y="405" width="4.0752%" height="15" fill="rgb(206,86,44)" fg:x="450" fg:w="26"/><text x="70.7829%" y="415.50">&lt;std..</text></g><g><title>std::sys::unix::fs::File::read_buf (26 samples, 4.08%)</title><rect x="70.5329%" y="389" width="4.0752%" height="15" fill="rgb(245,177,15)" fg:x="450" fg:w="26"/><text x="70.7829%" y="399.50">std:..</text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (26 samples, 4.08%)</title><rect x="70.5329%" y="373" width="4.0752%" height="15" fill="rgb(206,64,50)" fg:x="450" fg:w="26"/><text x="70.7829%" y="383.50">std:..</text></g><g><title>_int_malloc (1 samples, 0.16%)</title><rect x="74.4514%" y="357" width="0.1567%" height="15" fill="rgb(234,36,40)" fg:x="475" fg:w="1"/><text x="74.7014%" y="367.50"></text></g><g><title>__entry_text_start (1 samples, 0.16%)</title><rect x="74.4514%" y="341" width="0.1567%" height="15" fill="rgb(213,64,8)" fg:x="475" fg:w="1"/><text x="74.7014%" y="351.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="75.0784%" y="405" width="0.1567%" height="15" fill="rgb(210,75,36)" fg:x="479" fg:w="1"/><text x="75.3284%" y="415.50"></text></g><g><title>fput (1 samples, 0.16%)</title><rect x="75.2351%" y="389" width="0.1567%" height="15" fill="rgb(229,88,21)" fg:x="480" fg:w="1"/><text x="75.4851%" y="399.50"></text></g><g><title>fput_many (1 samples, 0.16%)</title><rect x="75.2351%" y="373" width="0.1567%" height="15" fill="rgb(252,204,47)" fg:x="480" fg:w="1"/><text x="75.4851%" y="383.50"></text></g><g><title>task_work_add (1 samples, 0.16%)</title><rect x="75.2351%" y="357" width="0.1567%" height="15" fill="rgb(208,77,27)" fg:x="480" fg:w="1"/><text x="75.4851%" y="367.50"></text></g><g><title>__x64_sys_close (3 samples, 0.47%)</title><rect x="75.0784%" y="437" width="0.4702%" height="15" fill="rgb(221,76,26)" fg:x="479" fg:w="3"/><text x="75.3284%" y="447.50"></text></g><g><title>close_fd (3 samples, 0.47%)</title><rect x="75.0784%" y="421" width="0.4702%" height="15" fill="rgb(225,139,18)" fg:x="479" fg:w="3"/><text x="75.3284%" y="431.50"></text></g><g><title>filp_close (2 samples, 0.31%)</title><rect x="75.2351%" y="405" width="0.3135%" height="15" fill="rgb(230,137,11)" fg:x="480" fg:w="2"/><text x="75.4851%" y="415.50"></text></g><g><title>fput_many (1 samples, 0.16%)</title><rect x="75.3918%" y="389" width="0.1567%" height="15" fill="rgb(212,28,1)" fg:x="481" fg:w="1"/><text x="75.6418%" y="399.50"></text></g><g><title>__fsnotify_parent (1 samples, 0.16%)</title><rect x="75.8621%" y="357" width="0.1567%" height="15" fill="rgb(248,164,17)" fg:x="484" fg:w="1"/><text x="76.1121%" y="367.50"></text></g><g><title>lockref_get_not_zero (1 samples, 0.16%)</title><rect x="75.8621%" y="341" width="0.1567%" height="15" fill="rgb(222,171,42)" fg:x="484" fg:w="1"/><text x="76.1121%" y="351.50"></text></g><g><title>exit_to_user_mode_prepare (3 samples, 0.47%)</title><rect x="75.8621%" y="421" width="0.4702%" height="15" fill="rgb(243,84,45)" fg:x="484" fg:w="3"/><text x="76.1121%" y="431.50"></text></g><g><title>task_work_run (3 samples, 0.47%)</title><rect x="75.8621%" y="405" width="0.4702%" height="15" fill="rgb(252,49,23)" fg:x="484" fg:w="3"/><text x="76.1121%" y="415.50"></text></g><g><title>____fput (3 samples, 0.47%)</title><rect x="75.8621%" y="389" width="0.4702%" height="15" fill="rgb(215,19,7)" fg:x="484" fg:w="3"/><text x="76.1121%" y="399.50"></text></g><g><title>__fput (3 samples, 0.47%)</title><rect x="75.8621%" y="373" width="0.4702%" height="15" fill="rgb(238,81,41)" fg:x="484" fg:w="3"/><text x="76.1121%" y="383.50"></text></g><g><title>call_rcu (2 samples, 0.31%)</title><rect x="76.0188%" y="357" width="0.3135%" height="15" fill="rgb(210,199,37)" fg:x="485" fg:w="2"/><text x="76.2688%" y="367.50"></text></g><g><title>rcu_segcblist_enqueue (1 samples, 0.16%)</title><rect x="76.1755%" y="341" width="0.1567%" height="15" fill="rgb(244,192,49)" fg:x="486" fg:w="1"/><text x="76.4255%" y="351.50"></text></g><g><title>do_syscall_64 (10 samples, 1.57%)</title><rect x="75.0784%" y="453" width="1.5674%" height="15" fill="rgb(226,211,11)" fg:x="479" fg:w="10"/><text x="75.3284%" y="463.50"></text></g><g><title>syscall_exit_to_user_mode (7 samples, 1.10%)</title><rect x="75.5486%" y="437" width="1.0972%" height="15" fill="rgb(236,162,54)" fg:x="482" fg:w="7"/><text x="75.7986%" y="447.50"></text></g><g><title>syscall_exit_work (2 samples, 0.31%)</title><rect x="76.3323%" y="421" width="0.3135%" height="15" fill="rgb(220,229,9)" fg:x="487" fg:w="2"/><text x="76.5823%" y="431.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.31%)</title><rect x="76.3323%" y="405" width="0.3135%" height="15" fill="rgb(250,87,22)" fg:x="487" fg:w="2"/><text x="76.5823%" y="415.50"></text></g><g><title>audit_filter_syscall (1 samples, 0.16%)</title><rect x="76.4890%" y="389" width="0.1567%" height="15" fill="rgb(239,43,17)" fg:x="488" fg:w="1"/><text x="76.7390%" y="399.50"></text></g><g><title>auditd_test_task (1 samples, 0.16%)</title><rect x="76.4890%" y="373" width="0.1567%" height="15" fill="rgb(231,177,25)" fg:x="488" fg:w="1"/><text x="76.7390%" y="383.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (13 samples, 2.04%)</title><rect x="74.7649%" y="469" width="2.0376%" height="15" fill="rgb(219,179,1)" fg:x="477" fg:w="13"/><text x="75.0149%" y="479.50">e..</text></g><g><title>syscall_exit_to_user_mode (1 samples, 0.16%)</title><rect x="76.6458%" y="453" width="0.1567%" height="15" fill="rgb(238,219,53)" fg:x="489" fg:w="1"/><text x="76.8958%" y="463.50"></text></g><g><title>__close (15 samples, 2.35%)</title><rect x="74.6082%" y="485" width="2.3511%" height="15" fill="rgb(232,167,36)" fg:x="476" fg:w="15"/><text x="74.8582%" y="495.50">_..</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="76.8025%" y="469" width="0.1567%" height="15" fill="rgb(244,19,51)" fg:x="490" fg:w="1"/><text x="77.0525%" y="479.50"></text></g><g><title>alloc_empty_file (2 samples, 0.31%)</title><rect x="77.1160%" y="245" width="0.3135%" height="15" fill="rgb(224,6,22)" fg:x="492" fg:w="2"/><text x="77.3660%" y="255.50"></text></g><g><title>__alloc_file (2 samples, 0.31%)</title><rect x="77.1160%" y="229" width="0.3135%" height="15" fill="rgb(224,145,5)" fg:x="492" fg:w="2"/><text x="77.3660%" y="239.50"></text></g><g><title>security_file_alloc (2 samples, 0.31%)</title><rect x="77.1160%" y="213" width="0.3135%" height="15" fill="rgb(234,130,49)" fg:x="492" fg:w="2"/><text x="77.3660%" y="223.50"></text></g><g><title>apparmor_file_alloc_security (2 samples, 0.31%)</title><rect x="77.1160%" y="197" width="0.3135%" height="15" fill="rgb(254,6,2)" fg:x="492" fg:w="2"/><text x="77.3660%" y="207.50"></text></g><g><title>lockref_get (1 samples, 0.16%)</title><rect x="77.5862%" y="197" width="0.1567%" height="15" fill="rgb(208,96,46)" fg:x="495" fg:w="1"/><text x="77.8362%" y="207.50"></text></g><g><title>do_dentry_open (5 samples, 0.78%)</title><rect x="77.4295%" y="213" width="0.7837%" height="15" fill="rgb(239,3,39)" fg:x="494" fg:w="5"/><text x="77.6795%" y="223.50"></text></g><g><title>security_file_open (3 samples, 0.47%)</title><rect x="77.7429%" y="197" width="0.4702%" height="15" fill="rgb(233,210,1)" fg:x="496" fg:w="3"/><text x="77.9929%" y="207.50"></text></g><g><title>apparmor_file_open (2 samples, 0.31%)</title><rect x="77.8997%" y="181" width="0.3135%" height="15" fill="rgb(244,137,37)" fg:x="497" fg:w="2"/><text x="78.1497%" y="191.50"></text></g><g><title>do_open.isra.0 (6 samples, 0.94%)</title><rect x="77.4295%" y="245" width="0.9404%" height="15" fill="rgb(240,136,2)" fg:x="494" fg:w="6"/><text x="77.6795%" y="255.50"></text></g><g><title>vfs_open (6 samples, 0.94%)</title><rect x="77.4295%" y="229" width="0.9404%" height="15" fill="rgb(239,18,37)" fg:x="494" fg:w="6"/><text x="77.6795%" y="239.50"></text></g><g><title>errseq_sample (1 samples, 0.16%)</title><rect x="78.2132%" y="213" width="0.1567%" height="15" fill="rgb(218,185,22)" fg:x="499" fg:w="1"/><text x="78.4632%" y="223.50"></text></g><g><title>link_path_walk.part.0 (1 samples, 0.16%)</title><rect x="78.3699%" y="245" width="0.1567%" height="15" fill="rgb(225,218,4)" fg:x="500" fg:w="1"/><text x="78.6199%" y="255.50"></text></g><g><title>do_filp_open (10 samples, 1.57%)</title><rect x="77.1160%" y="277" width="1.5674%" height="15" fill="rgb(230,182,32)" fg:x="492" fg:w="10"/><text x="77.3660%" y="287.50"></text></g><g><title>path_openat (10 samples, 1.57%)</title><rect x="77.1160%" y="261" width="1.5674%" height="15" fill="rgb(242,56,43)" fg:x="492" fg:w="10"/><text x="77.3660%" y="271.50"></text></g><g><title>terminate_walk (1 samples, 0.16%)</title><rect x="78.5266%" y="245" width="0.1567%" height="15" fill="rgb(233,99,24)" fg:x="501" fg:w="1"/><text x="78.7766%" y="255.50"></text></g><g><title>dput (1 samples, 0.16%)</title><rect x="78.5266%" y="229" width="0.1567%" height="15" fill="rgb(234,209,42)" fg:x="501" fg:w="1"/><text x="78.7766%" y="239.50"></text></g><g><title>_raw_spin_lock (1 samples, 0.16%)</title><rect x="78.8401%" y="261" width="0.1567%" height="15" fill="rgb(227,7,12)" fg:x="503" fg:w="1"/><text x="79.0901%" y="271.50"></text></g><g><title>get_unused_fd_flags (3 samples, 0.47%)</title><rect x="78.6834%" y="277" width="0.4702%" height="15" fill="rgb(245,203,43)" fg:x="502" fg:w="3"/><text x="78.9334%" y="287.50"></text></g><g><title>expand_files (1 samples, 0.16%)</title><rect x="78.9969%" y="261" width="0.1567%" height="15" fill="rgb(238,205,33)" fg:x="504" fg:w="1"/><text x="79.2469%" y="271.50"></text></g><g><title>__audit_getname (1 samples, 0.16%)</title><rect x="79.3103%" y="245" width="0.1567%" height="15" fill="rgb(231,56,7)" fg:x="506" fg:w="1"/><text x="79.5603%" y="255.50"></text></g><g><title>audit_alloc_name (1 samples, 0.16%)</title><rect x="79.3103%" y="229" width="0.1567%" height="15" fill="rgb(244,186,29)" fg:x="506" fg:w="1"/><text x="79.5603%" y="239.50"></text></g><g><title>__check_object_size (1 samples, 0.16%)</title><rect x="79.4671%" y="229" width="0.1567%" height="15" fill="rgb(234,111,31)" fg:x="507" fg:w="1"/><text x="79.7171%" y="239.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="79.4671%" y="213" width="0.1567%" height="15" fill="rgb(241,149,10)" fg:x="507" fg:w="1"/><text x="79.7171%" y="223.50"></text></g><g><title>__x64_sys_openat (17 samples, 2.66%)</title><rect x="77.1160%" y="325" width="2.6646%" height="15" fill="rgb(249,206,44)" fg:x="492" fg:w="17"/><text x="77.3660%" y="335.50">__..</text></g><g><title>do_sys_open (17 samples, 2.66%)</title><rect x="77.1160%" y="309" width="2.6646%" height="15" fill="rgb(251,153,30)" fg:x="492" fg:w="17"/><text x="77.3660%" y="319.50">do..</text></g><g><title>do_sys_openat2 (17 samples, 2.66%)</title><rect x="77.1160%" y="293" width="2.6646%" height="15" fill="rgb(239,152,38)" fg:x="492" fg:w="17"/><text x="77.3660%" y="303.50">do..</text></g><g><title>getname (4 samples, 0.63%)</title><rect x="79.1536%" y="277" width="0.6270%" height="15" fill="rgb(249,139,47)" fg:x="505" fg:w="4"/><text x="79.4036%" y="287.50"></text></g><g><title>getname_flags (4 samples, 0.63%)</title><rect x="79.1536%" y="261" width="0.6270%" height="15" fill="rgb(244,64,35)" fg:x="505" fg:w="4"/><text x="79.4036%" y="271.50"></text></g><g><title>strncpy_from_user (2 samples, 0.31%)</title><rect x="79.4671%" y="245" width="0.3135%" height="15" fill="rgb(216,46,15)" fg:x="507" fg:w="2"/><text x="79.7171%" y="255.50"></text></g><g><title>check_stack_object (1 samples, 0.16%)</title><rect x="79.6238%" y="229" width="0.1567%" height="15" fill="rgb(250,74,19)" fg:x="508" fg:w="1"/><text x="79.8738%" y="239.50"></text></g><g><title>syscall_enter_from_user_mode (1 samples, 0.16%)</title><rect x="79.7806%" y="325" width="0.1567%" height="15" fill="rgb(249,42,33)" fg:x="509" fg:w="1"/><text x="80.0306%" y="335.50"></text></g><g><title>exit_to_user_mode_prepare (2 samples, 0.31%)</title><rect x="80.4075%" y="309" width="0.3135%" height="15" fill="rgb(242,149,17)" fg:x="513" fg:w="2"/><text x="80.6575%" y="319.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (26 samples, 4.08%)</title><rect x="76.9592%" y="357" width="4.0752%" height="15" fill="rgb(244,29,21)" fg:x="491" fg:w="26"/><text x="77.2092%" y="367.50">entr..</text></g><g><title>do_syscall_64 (25 samples, 3.92%)</title><rect x="77.1160%" y="341" width="3.9185%" height="15" fill="rgb(220,130,37)" fg:x="492" fg:w="25"/><text x="77.3660%" y="351.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (7 samples, 1.10%)</title><rect x="79.9373%" y="325" width="1.0972%" height="15" fill="rgb(211,67,2)" fg:x="510" fg:w="7"/><text x="80.1873%" y="335.50"></text></g><g><title>syscall_exit_work (2 samples, 0.31%)</title><rect x="80.7210%" y="309" width="0.3135%" height="15" fill="rgb(235,68,52)" fg:x="515" fg:w="2"/><text x="80.9710%" y="319.50"></text></g><g><title>__audit_syscall_exit (2 samples, 0.31%)</title><rect x="80.7210%" y="293" width="0.3135%" height="15" fill="rgb(246,142,3)" fg:x="515" fg:w="2"/><text x="80.9710%" y="303.50"></text></g><g><title>putname (2 samples, 0.31%)</title><rect x="80.7210%" y="277" width="0.3135%" height="15" fill="rgb(241,25,7)" fg:x="515" fg:w="2"/><text x="80.9710%" y="287.50"></text></g><g><title>kmem_cache_free (2 samples, 0.31%)</title><rect x="80.7210%" y="261" width="0.3135%" height="15" fill="rgb(242,119,39)" fg:x="515" fg:w="2"/><text x="80.9710%" y="271.50"></text></g><g><title>std::fs::read_to_string::inner (198 samples, 31.03%)</title><rect x="50.6270%" y="501" width="31.0345%" height="15" fill="rgb(241,98,45)" fg:x="323" fg:w="198"/><text x="50.8770%" y="511.50">std::fs::read_to_string::inner</text></g><g><title>std::fs::File::open (30 samples, 4.70%)</title><rect x="76.9592%" y="485" width="4.7022%" height="15" fill="rgb(254,28,30)" fg:x="491" fg:w="30"/><text x="77.2092%" y="495.50">std::..</text></g><g><title>std::fs::OpenOptions::open (30 samples, 4.70%)</title><rect x="76.9592%" y="469" width="4.7022%" height="15" fill="rgb(241,142,54)" fg:x="491" fg:w="30"/><text x="77.2092%" y="479.50">std::..</text></g><g><title>std::fs::OpenOptions::_open (30 samples, 4.70%)</title><rect x="76.9592%" y="453" width="4.7022%" height="15" fill="rgb(222,85,15)" fg:x="491" fg:w="30"/><text x="77.2092%" y="463.50">std::..</text></g><g><title>std::sys::unix::fs::File::open (30 samples, 4.70%)</title><rect x="76.9592%" y="437" width="4.7022%" height="15" fill="rgb(210,85,47)" fg:x="491" fg:w="30"/><text x="77.2092%" y="447.50">std::..</text></g><g><title>std::sys::unix::fs::File::open_c (30 samples, 4.70%)</title><rect x="76.9592%" y="421" width="4.7022%" height="15" fill="rgb(224,206,25)" fg:x="491" fg:w="30"/><text x="77.2092%" y="431.50">std::..</text></g><g><title>std::sys::unix::cvt_r (30 samples, 4.70%)</title><rect x="76.9592%" y="405" width="4.7022%" height="15" fill="rgb(243,201,19)" fg:x="491" fg:w="30"/><text x="77.2092%" y="415.50">std::..</text></g><g><title>std::sys::unix::fs::File::open_c::{{closure}} (30 samples, 4.70%)</title><rect x="76.9592%" y="389" width="4.7022%" height="15" fill="rgb(236,59,4)" fg:x="491" fg:w="30"/><text x="77.2092%" y="399.50">std::..</text></g><g><title>__libc_open64 (30 samples, 4.70%)</title><rect x="76.9592%" y="373" width="4.7022%" height="15" fill="rgb(254,179,45)" fg:x="491" fg:w="30"/><text x="77.2092%" y="383.50">__lib..</text></g><g><title>syscall_return_via_sysret (4 samples, 0.63%)</title><rect x="81.0345%" y="357" width="0.6270%" height="15" fill="rgb(226,14,10)" fg:x="517" fg:w="4"/><text x="81.2845%" y="367.50"></text></g><g><title>[libc-2.31.so] (1 samples, 0.16%)</title><rect x="81.6614%" y="453" width="0.1567%" height="15" fill="rgb(244,27,41)" fg:x="521" fg:w="1"/><text x="81.9114%" y="463.50"></text></g><g><title>from_kuid_munged (1 samples, 0.16%)</title><rect x="82.2884%" y="341" width="0.1567%" height="15" fill="rgb(235,35,32)" fg:x="525" fg:w="1"/><text x="82.5384%" y="351.50"></text></g><g><title>__audit_inode (1 samples, 0.16%)</title><rect x="82.6019%" y="293" width="0.1567%" height="15" fill="rgb(218,68,31)" fg:x="527" fg:w="1"/><text x="82.8519%" y="303.50"></text></g><g><title>audit_copy_inode (1 samples, 0.16%)</title><rect x="82.6019%" y="277" width="0.1567%" height="15" fill="rgb(207,120,37)" fg:x="527" fg:w="1"/><text x="82.8519%" y="287.50"></text></g><g><title>get_vfs_caps_from_disk (1 samples, 0.16%)</title><rect x="82.6019%" y="261" width="0.1567%" height="15" fill="rgb(227,98,0)" fg:x="527" fg:w="1"/><text x="82.8519%" y="271.50"></text></g><g><title>__vfs_getxattr (1 samples, 0.16%)</title><rect x="82.6019%" y="245" width="0.1567%" height="15" fill="rgb(207,7,3)" fg:x="527" fg:w="1"/><text x="82.8519%" y="255.50"></text></g><g><title>ext4_xattr_security_get (1 samples, 0.16%)</title><rect x="82.6019%" y="229" width="0.1567%" height="15" fill="rgb(206,98,19)" fg:x="527" fg:w="1"/><text x="82.8519%" y="239.50"></text></g><g><title>ext4_xattr_get (1 samples, 0.16%)</title><rect x="82.6019%" y="213" width="0.1567%" height="15" fill="rgb(217,5,26)" fg:x="527" fg:w="1"/><text x="82.8519%" y="223.50"></text></g><g><title>complete_walk (1 samples, 0.16%)</title><rect x="82.7586%" y="277" width="0.1567%" height="15" fill="rgb(235,190,38)" fg:x="528" fg:w="1"/><text x="83.0086%" y="287.50"></text></g><g><title>try_to_unlazy (1 samples, 0.16%)</title><rect x="82.7586%" y="261" width="0.1567%" height="15" fill="rgb(247,86,24)" fg:x="528" fg:w="1"/><text x="83.0086%" y="271.50"></text></g><g><title>inode_permission (1 samples, 0.16%)</title><rect x="82.9154%" y="277" width="0.1567%" height="15" fill="rgb(205,101,16)" fg:x="529" fg:w="1"/><text x="83.1654%" y="287.50"></text></g><g><title>inode_permission (3 samples, 0.47%)</title><rect x="83.0721%" y="261" width="0.4702%" height="15" fill="rgb(246,168,33)" fg:x="530" fg:w="3"/><text x="83.3221%" y="271.50"></text></g><g><title>generic_permission (1 samples, 0.16%)</title><rect x="83.3856%" y="245" width="0.1567%" height="15" fill="rgb(231,114,1)" fg:x="532" fg:w="1"/><text x="83.6356%" y="255.50"></text></g><g><title>link_path_walk.part.0 (6 samples, 0.94%)</title><rect x="83.0721%" y="277" width="0.9404%" height="15" fill="rgb(207,184,53)" fg:x="530" fg:w="6"/><text x="83.3221%" y="287.50"></text></g><g><title>walk_component (3 samples, 0.47%)</title><rect x="83.5423%" y="261" width="0.4702%" height="15" fill="rgb(224,95,51)" fg:x="533" fg:w="3"/><text x="83.7923%" y="271.50"></text></g><g><title>lookup_fast (3 samples, 0.47%)</title><rect x="83.5423%" y="245" width="0.4702%" height="15" fill="rgb(212,188,45)" fg:x="533" fg:w="3"/><text x="83.7923%" y="255.50"></text></g><g><title>__d_lookup_rcu (2 samples, 0.31%)</title><rect x="83.6991%" y="229" width="0.3135%" height="15" fill="rgb(223,154,38)" fg:x="534" fg:w="2"/><text x="83.9491%" y="239.50"></text></g><g><title>filename_lookup (10 samples, 1.57%)</title><rect x="82.6019%" y="309" width="1.5674%" height="15" fill="rgb(251,22,52)" fg:x="527" fg:w="10"/><text x="82.8519%" y="319.50"></text></g><g><title>path_lookupat.isra.0 (9 samples, 1.41%)</title><rect x="82.7586%" y="293" width="1.4107%" height="15" fill="rgb(229,209,22)" fg:x="528" fg:w="9"/><text x="83.0086%" y="303.50"></text></g><g><title>walk_component (1 samples, 0.16%)</title><rect x="84.0125%" y="277" width="0.1567%" height="15" fill="rgb(234,138,34)" fg:x="536" fg:w="1"/><text x="84.2625%" y="287.50"></text></g><g><title>lookup_fast (1 samples, 0.16%)</title><rect x="84.0125%" y="261" width="0.1567%" height="15" fill="rgb(212,95,11)" fg:x="536" fg:w="1"/><text x="84.2625%" y="271.50"></text></g><g><title>__d_lookup_rcu (1 samples, 0.16%)</title><rect x="84.0125%" y="245" width="0.1567%" height="15" fill="rgb(240,179,47)" fg:x="536" fg:w="1"/><text x="84.2625%" y="255.50"></text></g><g><title>__audit_getname (1 samples, 0.16%)</title><rect x="84.1693%" y="293" width="0.1567%" height="15" fill="rgb(240,163,11)" fg:x="537" fg:w="1"/><text x="84.4193%" y="303.50"></text></g><g><title>audit_alloc_name (1 samples, 0.16%)</title><rect x="84.1693%" y="277" width="0.1567%" height="15" fill="rgb(236,37,12)" fg:x="537" fg:w="1"/><text x="84.4193%" y="287.50"></text></g><g><title>path_get (1 samples, 0.16%)</title><rect x="84.1693%" y="261" width="0.1567%" height="15" fill="rgb(232,164,16)" fg:x="537" fg:w="1"/><text x="84.4193%" y="271.50"></text></g><g><title>lockref_get (1 samples, 0.16%)</title><rect x="84.1693%" y="245" width="0.1567%" height="15" fill="rgb(244,205,15)" fg:x="537" fg:w="1"/><text x="84.4193%" y="255.50"></text></g><g><title>memset_erms (1 samples, 0.16%)</title><rect x="84.3260%" y="293" width="0.1567%" height="15" fill="rgb(223,117,47)" fg:x="538" fg:w="1"/><text x="84.5760%" y="303.50"></text></g><g><title>getname_flags (4 samples, 0.63%)</title><rect x="84.1693%" y="309" width="0.6270%" height="15" fill="rgb(244,107,35)" fg:x="537" fg:w="4"/><text x="84.4193%" y="319.50"></text></g><g><title>strncpy_from_user (2 samples, 0.31%)</title><rect x="84.4828%" y="293" width="0.3135%" height="15" fill="rgb(205,140,8)" fg:x="539" fg:w="2"/><text x="84.7328%" y="303.50"></text></g><g><title>__check_object_size (2 samples, 0.31%)</title><rect x="84.4828%" y="277" width="0.3135%" height="15" fill="rgb(228,84,46)" fg:x="539" fg:w="2"/><text x="84.7328%" y="287.50"></text></g><g><title>__virt_addr_valid (1 samples, 0.16%)</title><rect x="84.6395%" y="261" width="0.1567%" height="15" fill="rgb(254,188,9)" fg:x="540" fg:w="1"/><text x="84.8895%" y="271.50"></text></g><g><title>user_path_at_empty (15 samples, 2.35%)</title><rect x="82.6019%" y="325" width="2.3511%" height="15" fill="rgb(206,112,54)" fg:x="527" fg:w="15"/><text x="82.8519%" y="335.50">u..</text></g><g><title>restore_nameidata (1 samples, 0.16%)</title><rect x="84.7962%" y="309" width="0.1567%" height="15" fill="rgb(216,84,49)" fg:x="541" fg:w="1"/><text x="85.0462%" y="319.50"></text></g><g><title>security_inode_getattr (1 samples, 0.16%)</title><rect x="84.9530%" y="309" width="0.1567%" height="15" fill="rgb(214,194,35)" fg:x="542" fg:w="1"/><text x="85.2030%" y="319.50"></text></g><g><title>apparmor_inode_getattr (1 samples, 0.16%)</title><rect x="84.9530%" y="293" width="0.1567%" height="15" fill="rgb(249,28,3)" fg:x="542" fg:w="1"/><text x="85.2030%" y="303.50"></text></g><g><title>common_perm_cond (1 samples, 0.16%)</title><rect x="84.9530%" y="277" width="0.1567%" height="15" fill="rgb(222,56,52)" fg:x="542" fg:w="1"/><text x="85.2030%" y="287.50"></text></g><g><title>common_perm (1 samples, 0.16%)</title><rect x="84.9530%" y="261" width="0.1567%" height="15" fill="rgb(245,217,50)" fg:x="542" fg:w="1"/><text x="85.2030%" y="271.50"></text></g><g><title>__x64_sys_statx (20 samples, 3.13%)</title><rect x="82.2884%" y="373" width="3.1348%" height="15" fill="rgb(213,201,24)" fg:x="525" fg:w="20"/><text x="82.5384%" y="383.50">__x..</text></g><g><title>do_statx (20 samples, 3.13%)</title><rect x="82.2884%" y="357" width="3.1348%" height="15" fill="rgb(248,116,28)" fg:x="525" fg:w="20"/><text x="82.5384%" y="367.50">do_..</text></g><g><title>vfs_statx (19 samples, 2.98%)</title><rect x="82.4451%" y="341" width="2.9781%" height="15" fill="rgb(219,72,43)" fg:x="526" fg:w="19"/><text x="82.6951%" y="351.50">vfs..</text></g><g><title>vfs_getattr (3 samples, 0.47%)</title><rect x="84.9530%" y="325" width="0.4702%" height="15" fill="rgb(209,138,14)" fg:x="542" fg:w="3"/><text x="85.2030%" y="335.50"></text></g><g><title>vfs_getattr_nosec (2 samples, 0.31%)</title><rect x="85.1097%" y="309" width="0.3135%" height="15" fill="rgb(222,18,33)" fg:x="543" fg:w="2"/><text x="85.3597%" y="319.50"></text></g><g><title>ext4_file_getattr (2 samples, 0.31%)</title><rect x="85.1097%" y="293" width="0.3135%" height="15" fill="rgb(213,199,7)" fg:x="543" fg:w="2"/><text x="85.3597%" y="303.50"></text></g><g><title>ext4_getattr (2 samples, 0.31%)</title><rect x="85.1097%" y="277" width="0.3135%" height="15" fill="rgb(250,110,10)" fg:x="543" fg:w="2"/><text x="85.3597%" y="287.50"></text></g><g><title>generic_fillattr (1 samples, 0.16%)</title><rect x="85.2665%" y="261" width="0.1567%" height="15" fill="rgb(248,123,6)" fg:x="544" fg:w="1"/><text x="85.5165%" y="271.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (25 samples, 3.92%)</title><rect x="81.9749%" y="405" width="3.9185%" height="15" fill="rgb(206,91,31)" fg:x="523" fg:w="25"/><text x="82.2249%" y="415.50">entr..</text></g><g><title>do_syscall_64 (23 samples, 3.61%)</title><rect x="82.2884%" y="389" width="3.6050%" height="15" fill="rgb(211,154,13)" fg:x="525" fg:w="23"/><text x="82.5384%" y="399.50">do_s..</text></g><g><title>syscall_exit_to_user_mode (3 samples, 0.47%)</title><rect x="85.4232%" y="373" width="0.4702%" height="15" fill="rgb(225,148,7)" fg:x="545" fg:w="3"/><text x="85.6732%" y="383.50"></text></g><g><title>syscall_exit_work (3 samples, 0.47%)</title><rect x="85.4232%" y="357" width="0.4702%" height="15" fill="rgb(220,160,43)" fg:x="545" fg:w="3"/><text x="85.6732%" y="367.50"></text></g><g><title>__audit_syscall_exit (3 samples, 0.47%)</title><rect x="85.4232%" y="341" width="0.4702%" height="15" fill="rgb(213,52,39)" fg:x="545" fg:w="3"/><text x="85.6732%" y="351.50"></text></g><g><title>audit_filter_syscall (2 samples, 0.31%)</title><rect x="85.5799%" y="325" width="0.3135%" height="15" fill="rgb(243,137,7)" fg:x="546" fg:w="2"/><text x="85.8299%" y="335.50"></text></g><g><title>rcu_read_unlock_strict (1 samples, 0.16%)</title><rect x="85.7367%" y="309" width="0.1567%" height="15" fill="rgb(230,79,13)" fg:x="547" fg:w="1"/><text x="85.9867%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (519 samples, 81.35%)</title><rect x="4.7022%" y="517" width="81.3480%" height="15" fill="rgb(247,105,23)" fg:x="30" fg:w="519"/><text x="4.9522%" y="527.50">&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold</text></g><g><title>std::path::Path::is_dir (28 samples, 4.39%)</title><rect x="81.6614%" y="501" width="4.3887%" height="15" fill="rgb(223,179,41)" fg:x="521" fg:w="28"/><text x="81.9114%" y="511.50">std::..</text></g><g><title>std::fs::metadata (28 samples, 4.39%)</title><rect x="81.6614%" y="485" width="4.3887%" height="15" fill="rgb(218,9,34)" fg:x="521" fg:w="28"/><text x="81.9114%" y="495.50">std::..</text></g><g><title>std::sys::unix::fs::stat (28 samples, 4.39%)</title><rect x="81.6614%" y="469" width="4.3887%" height="15" fill="rgb(222,106,8)" fg:x="521" fg:w="28"/><text x="81.9114%" y="479.50">std::..</text></g><g><title>std::sys::unix::fs::try_statx (27 samples, 4.23%)</title><rect x="81.8182%" y="453" width="4.2320%" height="15" fill="rgb(211,220,0)" fg:x="522" fg:w="27"/><text x="82.0682%" y="463.50">std::..</text></g><g><title>std::sys::unix::fs::try_statx::statx (27 samples, 4.23%)</title><rect x="81.8182%" y="437" width="4.2320%" height="15" fill="rgb(229,52,16)" fg:x="522" fg:w="27"/><text x="82.0682%" y="447.50">std::..</text></g><g><title>statx (27 samples, 4.23%)</title><rect x="81.8182%" y="421" width="4.2320%" height="15" fill="rgb(212,155,18)" fg:x="522" fg:w="27"/><text x="82.0682%" y="431.50">statx</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="85.8934%" y="405" width="0.1567%" height="15" fill="rgb(242,21,14)" fg:x="548" fg:w="1"/><text x="86.1434%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.31%)</title><rect x="86.0502%" y="517" width="0.3135%" height="15" fill="rgb(222,19,48)" fg:x="549" fg:w="2"/><text x="86.3002%" y="527.50"></text></g><g><title>_int_free (2 samples, 0.31%)</title><rect x="86.0502%" y="501" width="0.3135%" height="15" fill="rgb(232,45,27)" fg:x="549" fg:w="2"/><text x="86.3002%" y="511.50"></text></g><g><title>__GI_munmap (3 samples, 0.47%)</title><rect x="86.3636%" y="517" width="0.4702%" height="15" fill="rgb(249,103,42)" fg:x="551" fg:w="3"/><text x="86.6136%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (3 samples, 0.47%)</title><rect x="86.3636%" y="501" width="0.4702%" height="15" fill="rgb(246,81,33)" fg:x="551" fg:w="3"/><text x="86.6136%" y="511.50"></text></g><g><title>do_syscall_64 (3 samples, 0.47%)</title><rect x="86.3636%" y="485" width="0.4702%" height="15" fill="rgb(252,33,42)" fg:x="551" fg:w="3"/><text x="86.6136%" y="495.50"></text></g><g><title>__x64_sys_munmap (3 samples, 0.47%)</title><rect x="86.3636%" y="469" width="0.4702%" height="15" fill="rgb(209,212,41)" fg:x="551" fg:w="3"/><text x="86.6136%" y="479.50"></text></g><g><title>__vm_munmap (3 samples, 0.47%)</title><rect x="86.3636%" y="453" width="0.4702%" height="15" fill="rgb(207,154,6)" fg:x="551" fg:w="3"/><text x="86.6136%" y="463.50"></text></g><g><title>__do_munmap (3 samples, 0.47%)</title><rect x="86.3636%" y="437" width="0.4702%" height="15" fill="rgb(223,64,47)" fg:x="551" fg:w="3"/><text x="86.6136%" y="447.50"></text></g><g><title>unmap_region (3 samples, 0.47%)</title><rect x="86.3636%" y="421" width="0.4702%" height="15" fill="rgb(211,161,38)" fg:x="551" fg:w="3"/><text x="86.6136%" y="431.50"></text></g><g><title>unmap_vmas (3 samples, 0.47%)</title><rect x="86.3636%" y="405" width="0.4702%" height="15" fill="rgb(219,138,40)" fg:x="551" fg:w="3"/><text x="86.6136%" y="415.50"></text></g><g><title>unmap_single_vma (3 samples, 0.47%)</title><rect x="86.3636%" y="389" width="0.4702%" height="15" fill="rgb(241,228,46)" fg:x="551" fg:w="3"/><text x="86.6136%" y="399.50"></text></g><g><title>unmap_page_range (3 samples, 0.47%)</title><rect x="86.3636%" y="373" width="0.4702%" height="15" fill="rgb(223,209,38)" fg:x="551" fg:w="3"/><text x="86.6136%" y="383.50"></text></g><g><title>zap_pte_range.isra.0 (3 samples, 0.47%)</title><rect x="86.3636%" y="357" width="0.4702%" height="15" fill="rgb(236,164,45)" fg:x="551" fg:w="3"/><text x="86.6136%" y="367.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.31%)</title><rect x="86.5204%" y="341" width="0.3135%" height="15" fill="rgb(231,15,5)" fg:x="552" fg:w="2"/><text x="86.7704%" y="351.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.31%)</title><rect x="86.5204%" y="325" width="0.3135%" height="15" fill="rgb(252,35,15)" fg:x="552" fg:w="2"/><text x="86.7704%" y="335.50"></text></g><g><title>release_pages (2 samples, 0.31%)</title><rect x="86.5204%" y="309" width="0.3135%" height="15" fill="rgb(248,181,18)" fg:x="552" fg:w="2"/><text x="86.7704%" y="319.50"></text></g><g><title>free_unref_page_list (2 samples, 0.31%)</title><rect x="86.5204%" y="293" width="0.3135%" height="15" fill="rgb(233,39,42)" fg:x="552" fg:w="2"/><text x="86.7704%" y="303.50"></text></g><g><title>free_unref_page_commit.isra.0 (2 samples, 0.31%)</title><rect x="86.5204%" y="277" width="0.3135%" height="15" fill="rgb(238,110,33)" fg:x="552" fg:w="2"/><text x="86.7704%" y="287.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.31%)</title><rect x="86.5204%" y="261" width="0.3135%" height="15" fill="rgb(233,195,10)" fg:x="552" fg:w="2"/><text x="86.7704%" y="271.50"></text></g><g><title>__free_one_page (2 samples, 0.31%)</title><rect x="86.5204%" y="245" width="0.3135%" height="15" fill="rgb(254,105,3)" fg:x="552" fg:w="2"/><text x="86.7704%" y="255.50"></text></g><g><title>__irqentry_text_end (4 samples, 0.63%)</title><rect x="93.8871%" y="485" width="0.6270%" height="15" fill="rgb(221,225,9)" fg:x="599" fg:w="4"/><text x="94.1371%" y="495.50"></text></g><g><title>__mem_cgroup_charge (1 samples, 0.16%)</title><rect x="94.6708%" y="389" width="0.1567%" height="15" fill="rgb(224,227,45)" fg:x="604" fg:w="1"/><text x="94.9208%" y="399.50"></text></g><g><title>charge_memcg (1 samples, 0.16%)</title><rect x="94.6708%" y="373" width="0.1567%" height="15" fill="rgb(229,198,43)" fg:x="604" fg:w="1"/><text x="94.9208%" y="383.50"></text></g><g><title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.16%)</title><rect x="94.6708%" y="357" width="0.1567%" height="15" fill="rgb(206,209,35)" fg:x="604" fg:w="1"/><text x="94.9208%" y="367.50"></text></g><g><title>__alloc_pages (1 samples, 0.16%)</title><rect x="94.8276%" y="373" width="0.1567%" height="15" fill="rgb(245,195,53)" fg:x="605" fg:w="1"/><text x="95.0776%" y="383.50"></text></g><g><title>get_page_from_freelist (1 samples, 0.16%)</title><rect x="94.8276%" y="357" width="0.1567%" height="15" fill="rgb(240,92,26)" fg:x="605" fg:w="1"/><text x="95.0776%" y="367.50"></text></g><g><title>prep_new_page (1 samples, 0.16%)</title><rect x="94.8276%" y="341" width="0.1567%" height="15" fill="rgb(207,40,23)" fg:x="605" fg:w="1"/><text x="95.0776%" y="351.50"></text></g><g><title>clear_page_erms (1 samples, 0.16%)</title><rect x="94.8276%" y="325" width="0.1567%" height="15" fill="rgb(223,111,35)" fg:x="605" fg:w="1"/><text x="95.0776%" y="335.50"></text></g><g><title>alloc_pages_vma (2 samples, 0.31%)</title><rect x="94.8276%" y="389" width="0.3135%" height="15" fill="rgb(229,147,28)" fg:x="605" fg:w="2"/><text x="95.0776%" y="399.50"></text></g><g><title>_find_first_bit (1 samples, 0.16%)</title><rect x="94.9843%" y="373" width="0.1567%" height="15" fill="rgb(211,29,28)" fg:x="606" fg:w="1"/><text x="95.2343%" y="383.50"></text></g><g><title>do_user_addr_fault (5 samples, 0.78%)</title><rect x="94.5141%" y="453" width="0.7837%" height="15" fill="rgb(228,72,33)" fg:x="603" fg:w="5"/><text x="94.7641%" y="463.50"></text></g><g><title>handle_mm_fault (5 samples, 0.78%)</title><rect x="94.5141%" y="437" width="0.7837%" height="15" fill="rgb(205,214,31)" fg:x="603" fg:w="5"/><text x="94.7641%" y="447.50"></text></g><g><title>__handle_mm_fault (4 samples, 0.63%)</title><rect x="94.6708%" y="421" width="0.6270%" height="15" fill="rgb(224,111,15)" fg:x="604" fg:w="4"/><text x="94.9208%" y="431.50"></text></g><g><title>do_anonymous_page (4 samples, 0.63%)</title><rect x="94.6708%" y="405" width="0.6270%" height="15" fill="rgb(253,21,26)" fg:x="604" fg:w="4"/><text x="94.9208%" y="415.50"></text></g><g><title>get_mem_cgroup_from_mm (1 samples, 0.16%)</title><rect x="95.1411%" y="389" width="0.1567%" height="15" fill="rgb(245,139,43)" fg:x="607" fg:w="1"/><text x="95.3911%" y="399.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.94%)</title><rect x="94.5141%" y="485" width="0.9404%" height="15" fill="rgb(252,170,7)" fg:x="603" fg:w="6"/><text x="94.7641%" y="495.50"></text></g><g><title>exc_page_fault (6 samples, 0.94%)</title><rect x="94.5141%" y="469" width="0.9404%" height="15" fill="rgb(231,118,14)" fg:x="603" fg:w="6"/><text x="94.7641%" y="479.50"></text></g><g><title>irqentry_exit (1 samples, 0.16%)</title><rect x="95.2978%" y="453" width="0.1567%" height="15" fill="rgb(238,83,0)" fg:x="608" fg:w="1"/><text x="95.5478%" y="463.50"></text></g><g><title>irqentry_exit_to_user_mode (1 samples, 0.16%)</title><rect x="95.2978%" y="437" width="0.1567%" height="15" fill="rgb(221,39,39)" fg:x="608" fg:w="1"/><text x="95.5478%" y="447.50"></text></g><g><title>exit_to_user_mode_prepare (1 samples, 0.16%)</title><rect x="95.2978%" y="421" width="0.1567%" height="15" fill="rgb(222,119,46)" fg:x="608" fg:w="1"/><text x="95.5478%" y="431.50"></text></g><g><title>error_entry (4 samples, 0.63%)</title><rect x="95.4545%" y="485" width="0.6270%" height="15" fill="rgb(222,165,49)" fg:x="609" fg:w="4"/><text x="95.7045%" y="495.50"></text></g><g><title>__libc_start_main (593 samples, 92.95%)</title><rect x="3.6050%" y="741" width="92.9467%" height="15" fill="rgb(219,113,52)" fg:x="23" fg:w="593"/><text x="3.8550%" y="751.50">__libc_start_main</text></g><g><title>main (593 samples, 92.95%)</title><rect x="3.6050%" y="725" width="92.9467%" height="15" fill="rgb(214,7,15)" fg:x="23" fg:w="593"/><text x="3.8550%" y="735.50">main</text></g><g><title>std::rt::lang_start_internal (593 samples, 92.95%)</title><rect x="3.6050%" y="709" width="92.9467%" height="15" fill="rgb(235,32,4)" fg:x="23" fg:w="593"/><text x="3.8550%" y="719.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (593 samples, 92.95%)</title><rect x="3.6050%" y="693" width="92.9467%" height="15" fill="rgb(238,90,54)" fg:x="23" fg:w="593"/><text x="3.8550%" y="703.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (593 samples, 92.95%)</title><rect x="3.6050%" y="677" width="92.9467%" height="15" fill="rgb(213,208,19)" fg:x="23" fg:w="593"/><text x="3.8550%" y="687.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (593 samples, 92.95%)</title><rect x="3.6050%" y="661" width="92.9467%" height="15" fill="rgb(233,156,4)" fg:x="23" fg:w="593"/><text x="3.8550%" y="671.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (593 samples, 92.95%)</title><rect x="3.6050%" y="645" width="92.9467%" height="15" fill="rgb(207,194,5)" fg:x="23" fg:w="593"/><text x="3.8550%" y="655.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (593 samples, 92.95%)</title><rect x="3.6050%" y="629" width="92.9467%" height="15" fill="rgb(206,111,30)" fg:x="23" fg:w="593"/><text x="3.8550%" y="639.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (593 samples, 92.95%)</title><rect x="3.6050%" y="613" width="92.9467%" height="15" fill="rgb(243,70,54)" fg:x="23" fg:w="593"/><text x="3.8550%" y="623.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (593 samples, 92.95%)</title><rect x="3.6050%" y="597" width="92.9467%" height="15" fill="rgb(242,28,8)" fg:x="23" fg:w="593"/><text x="3.8550%" y="607.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (593 samples, 92.95%)</title><rect x="3.6050%" y="581" width="92.9467%" height="15" fill="rgb(219,106,18)" fg:x="23" fg:w="593"/><text x="3.8550%" y="591.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::_{{closure}} (593 samples, 92.95%)</title><rect x="3.6050%" y="565" width="92.9467%" height="15" fill="rgb(244,222,10)" fg:x="23" fg:w="593"/><text x="3.8550%" y="575.50">std::rt::lang_start::_{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (593 samples, 92.95%)</title><rect x="3.6050%" y="549" width="92.9467%" height="15" fill="rgb(236,179,52)" fg:x="23" fg:w="593"/><text x="3.8550%" y="559.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>tf_df::main (593 samples, 92.95%)</title><rect x="3.6050%" y="533" width="92.9467%" height="15" fill="rgb(213,23,39)" fg:x="23" fg:w="593"/><text x="3.8550%" y="543.50">tf_df::main</text></g><g><title>serde::ser::Serializer::collect_map (62 samples, 9.72%)</title><rect x="86.8339%" y="517" width="9.7179%" height="15" fill="rgb(238,48,10)" fg:x="554" fg:w="62"/><text x="87.0839%" y="527.50">serde::ser::Se..</text></g><g><title>[libc-2.31.so] (22 samples, 3.45%)</title><rect x="93.1034%" y="501" width="3.4483%" height="15" fill="rgb(251,196,23)" fg:x="594" fg:w="22"/><text x="93.3534%" y="511.50">[li..</text></g><g><title>sync_regs (3 samples, 0.47%)</title><rect x="96.0815%" y="485" width="0.4702%" height="15" fill="rgb(250,152,24)" fg:x="613" fg:w="3"/><text x="96.3315%" y="495.50"></text></g><g><title>_start (594 samples, 93.10%)</title><rect x="3.6050%" y="757" width="93.1034%" height="15" fill="rgb(209,150,17)" fg:x="23" fg:w="594"/><text x="3.8550%" y="767.50">_start</text></g><g><title>_dl_start (1 samples, 0.16%)</title><rect x="96.5517%" y="741" width="0.1567%" height="15" fill="rgb(234,202,34)" fg:x="616" fg:w="1"/><text x="96.8017%" y="751.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.16%)</title><rect x="96.5517%" y="725" width="0.1567%" height="15" fill="rgb(253,148,53)" fg:x="616" fg:w="1"/><text x="96.8017%" y="735.50"></text></g><g><title>[ld-2.31.so] (1 samples, 0.16%)</title><rect x="96.5517%" y="709" width="0.1567%" height="15" fill="rgb(218,129,16)" fg:x="616" fg:w="1"/><text x="96.8017%" y="719.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.16%)</title><rect x="96.5517%" y="693" width="0.1567%" height="15" fill="rgb(216,85,19)" fg:x="616" fg:w="1"/><text x="96.8017%" y="703.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.16%)</title><rect x="96.5517%" y="677" width="0.1567%" height="15" fill="rgb(235,228,7)" fg:x="616" fg:w="1"/><text x="96.8017%" y="687.50"></text></g><g><title>openaux (1 samples, 0.16%)</title><rect x="96.5517%" y="661" width="0.1567%" height="15" fill="rgb(245,175,0)" fg:x="616" fg:w="1"/><text x="96.8017%" y="671.50"></text></g><g><title>_dl_map_object (1 samples, 0.16%)</title><rect x="96.5517%" y="645" width="0.1567%" height="15" fill="rgb(208,168,36)" fg:x="616" fg:w="1"/><text x="96.8017%" y="655.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.16%)</title><rect x="96.5517%" y="629" width="0.1567%" height="15" fill="rgb(246,171,24)" fg:x="616" fg:w="1"/><text x="96.8017%" y="639.50"></text></g><g><title>__mmap (1 samples, 0.16%)</title><rect x="96.5517%" y="613" width="0.1567%" height="15" fill="rgb(215,142,24)" fg:x="616" fg:w="1"/><text x="96.8017%" y="623.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (1 samples, 0.16%)</title><rect x="96.5517%" y="597" width="0.1567%" height="15" fill="rgb(250,187,7)" fg:x="616" fg:w="1"/><text x="96.8017%" y="607.50"></text></g><g><title>do_syscall_64 (1 samples, 0.16%)</title><rect x="96.5517%" y="581" width="0.1567%" height="15" fill="rgb(228,66,33)" fg:x="616" fg:w="1"/><text x="96.8017%" y="591.50"></text></g><g><title>__x64_sys_mmap (1 samples, 0.16%)</title><rect x="96.5517%" y="565" width="0.1567%" height="15" fill="rgb(234,215,21)" fg:x="616" fg:w="1"/><text x="96.8017%" y="575.50"></text></g><g><title>ksys_mmap_pgoff (1 samples, 0.16%)</title><rect x="96.5517%" y="549" width="0.1567%" height="15" fill="rgb(222,191,20)" fg:x="616" fg:w="1"/><text x="96.8017%" y="559.50"></text></g><g><title>vm_mmap_pgoff (1 samples, 0.16%)</title><rect x="96.5517%" y="533" width="0.1567%" height="15" fill="rgb(245,79,54)" fg:x="616" fg:w="1"/><text x="96.8017%" y="543.50"></text></g><g><title>do_mmap (1 samples, 0.16%)</title><rect x="96.5517%" y="517" width="0.1567%" height="15" fill="rgb(240,10,37)" fg:x="616" fg:w="1"/><text x="96.8017%" y="527.50"></text></g><g><title>mmap_region (1 samples, 0.16%)</title><rect x="96.5517%" y="501" width="0.1567%" height="15" fill="rgb(214,192,32)" fg:x="616" fg:w="1"/><text x="96.8017%" y="511.50"></text></g><g><title>perf_event_mmap (1 samples, 0.16%)</title><rect x="96.5517%" y="485" width="0.1567%" height="15" fill="rgb(209,36,54)" fg:x="616" fg:w="1"/><text x="96.8017%" y="495.50"></text></g><g><title>perf_iterate_sb (1 samples, 0.16%)</title><rect x="96.5517%" y="469" width="0.1567%" height="15" fill="rgb(220,10,11)" fg:x="616" fg:w="1"/><text x="96.8017%" y="479.50"></text></g><g><title>perf_iterate_ctx (1 samples, 0.16%)</title><rect x="96.5517%" y="453" width="0.1567%" height="15" fill="rgb(221,106,17)" fg:x="616" fg:w="1"/><text x="96.8017%" y="463.50"></text></g><g><title>perf_event_mmap_output (1 samples, 0.16%)</title><rect x="96.5517%" y="437" width="0.1567%" height="15" fill="rgb(251,142,44)" fg:x="616" fg:w="1"/><text x="96.8017%" y="447.50"></text></g><g><title>__perf_event_header__init_id.isra.0 (1 samples, 0.16%)</title><rect x="96.5517%" y="421" width="0.1567%" height="15" fill="rgb(238,13,15)" fg:x="616" fg:w="1"/><text x="96.8017%" y="431.50"></text></g><g><title>local_clock (1 samples, 0.16%)</title><rect x="96.5517%" y="405" width="0.1567%" height="15" fill="rgb(208,107,27)" fg:x="616" fg:w="1"/><text x="96.8017%" y="415.50"></text></g><g><title>sched_clock_cpu (1 samples, 0.16%)</title><rect x="96.5517%" y="389" width="0.1567%" height="15" fill="rgb(205,136,37)" fg:x="616" fg:w="1"/><text x="96.8017%" y="399.50"></text></g><g><title>sched_clock (1 samples, 0.16%)</title><rect x="96.5517%" y="373" width="0.1567%" height="15" fill="rgb(250,205,27)" fg:x="616" fg:w="1"/><text x="96.8017%" y="383.50"></text></g><g><title>native_sched_clock (1 samples, 0.16%)</title><rect x="96.5517%" y="357" width="0.1567%" height="15" fill="rgb(210,80,43)" fg:x="616" fg:w="1"/><text x="96.8017%" y="367.50"></text></g><g><title>asm_exc_page_fault (6 samples, 0.94%)</title><rect x="96.7085%" y="757" width="0.9404%" height="15" fill="rgb(247,160,36)" fg:x="617" fg:w="6"/><text x="96.9585%" y="767.50"></text></g><g><title>__x64_sys_execve (1 samples, 0.16%)</title><rect x="97.6489%" y="725" width="0.1567%" height="15" fill="rgb(234,13,49)" fg:x="623" fg:w="1"/><text x="97.8989%" y="735.50"></text></g><g><title>do_execveat_common.isra.0 (1 samples, 0.16%)</title><rect x="97.6489%" y="709" width="0.1567%" height="15" fill="rgb(234,122,0)" fg:x="623" fg:w="1"/><text x="97.8989%" y="719.50"></text></g><g><title>bprm_execve (1 samples, 0.16%)</title><rect x="97.6489%" y="693" width="0.1567%" height="15" fill="rgb(207,146,38)" fg:x="623" fg:w="1"/><text x="97.8989%" y="703.50"></text></g><g><title>exec_binprm (1 samples, 0.16%)</title><rect x="97.6489%" y="677" width="0.1567%" height="15" fill="rgb(207,177,25)" fg:x="623" fg:w="1"/><text x="97.8989%" y="687.50"></text></g><g><title>load_elf_binary (1 samples, 0.16%)</title><rect x="97.6489%" y="661" width="0.1567%" height="15" fill="rgb(211,178,42)" fg:x="623" fg:w="1"/><text x="97.8989%" y="671.50"></text></g><g><title>setup_arg_pages (1 samples, 0.16%)</title><rect x="97.6489%" y="645" width="0.1567%" height="15" fill="rgb(230,69,54)" fg:x="623" fg:w="1"/><text x="97.8989%" y="655.50"></text></g><g><title>arch_align_stack (1 samples, 0.16%)</title><rect x="97.6489%" y="629" width="0.1567%" height="15" fill="rgb(214,135,41)" fg:x="623" fg:w="1"/><text x="97.8989%" y="639.50"></text></g><g><title>get_random_u32 (1 samples, 0.16%)</title><rect x="97.6489%" y="613" width="0.1567%" height="15" fill="rgb(237,67,25)" fg:x="623" fg:w="1"/><text x="97.8989%" y="623.50"></text></g><g><title>tlb_finish_mmu (1 samples, 0.16%)</title><rect x="97.8056%" y="645" width="0.1567%" height="15" fill="rgb(222,189,50)" fg:x="624" fg:w="1"/><text x="98.0556%" y="655.50"></text></g><g><title>tlb_flush_mmu (1 samples, 0.16%)</title><rect x="97.8056%" y="629" width="0.1567%" height="15" fill="rgb(245,148,34)" fg:x="624" fg:w="1"/><text x="98.0556%" y="639.50"></text></g><g><title>free_swap_cache (1 samples, 0.16%)</title><rect x="97.8056%" y="613" width="0.1567%" height="15" fill="rgb(222,29,6)" fg:x="624" fg:w="1"/><text x="98.0556%" y="623.50"></text></g><g><title>page_remove_rmap (1 samples, 0.16%)</title><rect x="98.1191%" y="581" width="0.1567%" height="15" fill="rgb(221,189,43)" fg:x="626" fg:w="1"/><text x="98.3691%" y="591.50"></text></g><g><title>__mod_lruvec_page_state (1 samples, 0.16%)</title><rect x="98.1191%" y="565" width="0.1567%" height="15" fill="rgb(207,36,27)" fg:x="626" fg:w="1"/><text x="98.3691%" y="575.50"></text></g><g><title>__mod_lruvec_state (1 samples, 0.16%)</title><rect x="98.1191%" y="549" width="0.1567%" height="15" fill="rgb(217,90,24)" fg:x="626" fg:w="1"/><text x="98.3691%" y="559.50"></text></g><g><title>__mod_memcg_lruvec_state (1 samples, 0.16%)</title><rect x="98.1191%" y="533" width="0.1567%" height="15" fill="rgb(224,66,35)" fg:x="626" fg:w="1"/><text x="98.3691%" y="543.50"></text></g><g><title>cgroup_rstat_updated (1 samples, 0.16%)</title><rect x="98.1191%" y="517" width="0.1567%" height="15" fill="rgb(221,13,50)" fg:x="626" fg:w="1"/><text x="98.3691%" y="527.50"></text></g><g><title>entry_SYSCALL_64_after_hwframe (6 samples, 0.94%)</title><rect x="97.6489%" y="757" width="0.9404%" height="15" fill="rgb(236,68,49)" fg:x="623" fg:w="6"/><text x="97.8989%" y="767.50"></text></g><g><title>do_syscall_64 (6 samples, 0.94%)</title><rect x="97.6489%" y="741" width="0.9404%" height="15" fill="rgb(229,146,28)" fg:x="623" fg:w="6"/><text x="97.8989%" y="751.50"></text></g><g><title>__x64_sys_exit_group (5 samples, 0.78%)</title><rect x="97.8056%" y="725" width="0.7837%" height="15" fill="rgb(225,31,38)" fg:x="624" fg:w="5"/><text x="98.0556%" y="735.50"></text></g><g><title>do_group_exit (5 samples, 0.78%)</title><rect x="97.8056%" y="709" width="0.7837%" height="15" fill="rgb(250,208,3)" fg:x="624" fg:w="5"/><text x="98.0556%" y="719.50"></text></g><g><title>do_exit (5 samples, 0.78%)</title><rect x="97.8056%" y="693" width="0.7837%" height="15" fill="rgb(246,54,23)" fg:x="624" fg:w="5"/><text x="98.0556%" y="703.50"></text></g><g><title>mmput (5 samples, 0.78%)</title><rect x="97.8056%" y="677" width="0.7837%" height="15" fill="rgb(243,76,11)" fg:x="624" fg:w="5"/><text x="98.0556%" y="687.50"></text></g><g><title>exit_mmap (5 samples, 0.78%)</title><rect x="97.8056%" y="661" width="0.7837%" height="15" fill="rgb(245,21,50)" fg:x="624" fg:w="5"/><text x="98.0556%" y="671.50"></text></g><g><title>unmap_vmas (4 samples, 0.63%)</title><rect x="97.9624%" y="645" width="0.6270%" height="15" fill="rgb(228,9,43)" fg:x="625" fg:w="4"/><text x="98.2124%" y="655.50"></text></g><g><title>unmap_single_vma (4 samples, 0.63%)</title><rect x="97.9624%" y="629" width="0.6270%" height="15" fill="rgb(208,100,47)" fg:x="625" fg:w="4"/><text x="98.2124%" y="639.50"></text></g><g><title>unmap_page_range (4 samples, 0.63%)</title><rect x="97.9624%" y="613" width="0.6270%" height="15" fill="rgb(232,26,8)" fg:x="625" fg:w="4"/><text x="98.2124%" y="623.50"></text></g><g><title>zap_pte_range.isra.0 (4 samples, 0.63%)</title><rect x="97.9624%" y="597" width="0.6270%" height="15" fill="rgb(216,166,38)" fg:x="625" fg:w="4"/><text x="98.2124%" y="607.50"></text></g><g><title>tlb_flush_mmu (2 samples, 0.31%)</title><rect x="98.2759%" y="581" width="0.3135%" height="15" fill="rgb(251,202,51)" fg:x="627" fg:w="2"/><text x="98.5259%" y="591.50"></text></g><g><title>free_pages_and_swap_cache (2 samples, 0.31%)</title><rect x="98.2759%" y="565" width="0.3135%" height="15" fill="rgb(254,216,34)" fg:x="627" fg:w="2"/><text x="98.5259%" y="575.50"></text></g><g><title>release_pages (2 samples, 0.31%)</title><rect x="98.2759%" y="549" width="0.3135%" height="15" fill="rgb(251,32,27)" fg:x="627" fg:w="2"/><text x="98.5259%" y="559.50"></text></g><g><title>free_unref_page_list (2 samples, 0.31%)</title><rect x="98.2759%" y="533" width="0.3135%" height="15" fill="rgb(208,127,28)" fg:x="627" fg:w="2"/><text x="98.5259%" y="543.50"></text></g><g><title>free_unref_page_commit.isra.0 (2 samples, 0.31%)</title><rect x="98.2759%" y="517" width="0.3135%" height="15" fill="rgb(224,137,22)" fg:x="627" fg:w="2"/><text x="98.5259%" y="527.50"></text></g><g><title>free_pcppages_bulk (2 samples, 0.31%)</title><rect x="98.2759%" y="501" width="0.3135%" height="15" fill="rgb(254,70,32)" fg:x="627" fg:w="2"/><text x="98.5259%" y="511.50"></text></g><g><title>entry_SYSCALL_64_safe_stack (8 samples, 1.25%)</title><rect x="98.5893%" y="757" width="1.2539%" height="15" fill="rgb(229,75,37)" fg:x="629" fg:w="8"/><text x="98.8393%" y="767.50"></text></g><g><title>all (638 samples, 100%)</title><rect x="0.0000%" y="789" width="100.0000%" height="15" fill="rgb(252,64,23)" fg:x="0" fg:w="638"/><text x="0.2500%" y="799.50"></text></g><g><title>tf-df (633 samples, 99.22%)</title><rect x="0.7837%" y="773" width="99.2163%" height="15" fill="rgb(232,162,48)" fg:x="5" fg:w="633"/><text x="1.0337%" y="783.50">tf-df</text></g><g><title>syscall_return_via_sysret (1 samples, 0.16%)</title><rect x="99.8433%" y="757" width="0.1567%" height="15" fill="rgb(246,160,12)" fg:x="637" fg:w="1"/><text x="100.0933%" y="767.50"></text></g></svg></svg>